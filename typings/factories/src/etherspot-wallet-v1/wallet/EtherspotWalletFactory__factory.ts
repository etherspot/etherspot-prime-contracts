/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  EtherspotWalletFactory,
  EtherspotWalletFactoryInterface,
} from "../../../../src/etherspot-wallet-v1/wallet/EtherspotWalletFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "AccountCreation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "ImplementationSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "accountCreationCode",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "accountImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "changeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_impl",
        type: "address",
      },
    ],
    name: "checkImplementation",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "createAccount",
    outputs: [
      {
        internalType: "address",
        name: "ret",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getAddress",
    outputs: [
      {
        internalType: "address",
        name: "proxy",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract EtherspotWallet",
        name: "_newImpl",
        type: "address",
      },
    ],
    name: "setImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001521380380620015218339818101604052810190620000379190620000e9565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200011b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b18262000084565b9050919050565b620000c381620000a4565b8114620000cf57600080fd5b50565b600081519050620000e381620000b8565b92915050565b6000602082840312156200010257620001016200007f565b5b60006200011284828501620000d2565b91505092915050565b6113f6806200012b6000396000f3fe60806040523480156200001157600080fd5b5060043610620000945760003560e01c80638da5cb5b11620000635780638da5cb5b1462000149578063a6f9dae1146200016b578063d784d426146200018b578063e6c0c59714620001ab5762000094565b806311464fbe146200009957806331c884df14620000bb5780635fbfb9cf14620000dd5780638cb84e181462000113575b600080fd5b620000a3620001e1565b604051620000b2919062000a6b565b60405180910390f35b620000c562000205565b604051620000d4919062000b22565b60405180910390f35b620000fb6004803603810190620000f5919062000bb7565b62000232565b6040516200010a919062000a6b565b60405180910390f35b6200013160048036038101906200012b919062000bb7565b620004df565b60405162000140919062000a6b565b60405180910390f35b6200015362000688565b60405162000162919062000a6b565b60405180910390f35b62000189600480360381019062000183919062000bfe565b620006ae565b005b620001a96004803603810190620001a3919062000c89565b62000830565b005b620001c96004803603810190620001c3919062000bfe565b6200095f565b604051620001d8919062000cd8565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060405180602001620002199062000a18565b6020820181038252601f19601f82011660405250905090565b60008073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603620002c5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002bc9062000d7c565b60405180910390fd5b6000620002d38484620004df565b905060008173ffffffffffffffffffffffffffffffffffffffff163b1115620003005780915050620004d9565b60006200030d85620009b7565b905060008180519060200120856040516020016200032d92919062000df2565b604051602081830303815290604052805190602001209050600060405180602001620003599062000a18565b6020820181038252601f19601f8201166040525060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16604051602001620003b792919062000e64565b6040516020818303038152906040529050818151826020016000f59450600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff160362000446576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200043d9062000ee0565b60405180910390fd5b6000835111156200046d57600080600085516020870160008a5af1036200046c57600080fd5b5b8673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8967dcaa00d8fcb9bb2b5beff4aaf8c020063512cf08fbe11fec37a1e3a150f288604051620004cc919062000f13565b60405180910390a3505050505b92915050565b60008073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160362000572576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005699062000d7c565b60405180910390fd5b60006200057f84620009b7565b905060008180519060200120846040516020016200059f92919062000df2565b604051602081830303815290604052805190602001209050600060405180602001620005cb9062000a18565b6020820181038252601f19601f8201166040525060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166040516020016200062992919062000e64565b6040516020818303038152906040529050600060ff60f81b3084848051906020012060405160200162000660949392919062000fd1565b6040516020818303038152906040528051906020012090508060001c94505050505092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462000741576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000738906200109d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620007b3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620007aa9062001135565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fa2ea9883a321a3e97b8266c2b078bfeec6d50c711ed71f874a90d500ae2eaf368160405162000825919062000a6b565b60405180910390a150565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614620008c3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620008ba906200109d565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fab64f92ab780ecbf4f3866f57cee465ff36c89450dcce20237ca7a8d81fb7d1360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405162000954919062000a6b565b60405180910390a150565b60008173ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16149050919050565b606081604051602401620009cc919062000a6b565b60405160208183030381529060405263c4d66de860e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050919050565b610269806200115883390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000a538262000a26565b9050919050565b62000a658162000a46565b82525050565b600060208201905062000a82600083018462000a5a565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101562000ac457808201518184015260208101905062000aa7565b60008484015250505050565b6000601f19601f8301169050919050565b600062000aee8262000a88565b62000afa818562000a93565b935062000b0c81856020860162000aa4565b62000b178162000ad0565b840191505092915050565b6000602082019050818103600083015262000b3e818462000ae1565b905092915050565b600080fd5b62000b568162000a46565b811462000b6257600080fd5b50565b60008135905062000b768162000b4b565b92915050565b6000819050919050565b62000b918162000b7c565b811462000b9d57600080fd5b50565b60008135905062000bb18162000b86565b92915050565b6000806040838503121562000bd15762000bd062000b46565b5b600062000be18582860162000b65565b925050602062000bf48582860162000ba0565b9150509250929050565b60006020828403121562000c175762000c1662000b46565b5b600062000c278482850162000b65565b91505092915050565b600062000c3d8262000a26565b9050919050565b600062000c518262000c30565b9050919050565b62000c638162000c44565b811462000c6f57600080fd5b50565b60008135905062000c838162000c58565b92915050565b60006020828403121562000ca25762000ca162000b46565b5b600062000cb28482850162000c72565b91505092915050565b60008115159050919050565b62000cd28162000cbb565b82525050565b600060208201905062000cef600083018462000cc7565b92915050565b600082825260208201905092915050565b7f457468657273706f7457616c6c6574466163746f72793a3a20696d706c656d6560008201527f6e746174696f6e206e6f74207365740000000000000000000000000000000000602082015250565b600062000d64602f8362000cf5565b915062000d718262000d06565b604082019050919050565b6000602082019050818103600083015262000d978162000d55565b9050919050565b6000819050919050565b6000819050919050565b62000dc762000dc18262000d9e565b62000da8565b82525050565b6000819050919050565b62000dec62000de68262000b7c565b62000dcd565b82525050565b600062000e00828562000db2565b60208201915062000e12828462000dd7565b6020820191508190509392505050565b600081905092915050565b600062000e3a8262000a88565b62000e46818562000e22565b935062000e5881856020860162000aa4565b80840191505092915050565b600062000e72828562000e2d565b915062000e80828462000dd7565b6020820191508190509392505050565b7f437265617465322063616c6c206661696c656400000000000000000000000000600082015250565b600062000ec860138362000cf5565b915062000ed58262000e90565b602082019050919050565b6000602082019050818103600083015262000efb8162000eb9565b9050919050565b62000f0d8162000b7c565b82525050565b600060208201905062000f2a600083018462000f02565b92915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b62000f7b62000f758262000f30565b62000f5c565b82525050565b60008160601b9050919050565b600062000f9b8262000f81565b9050919050565b600062000faf8262000f8e565b9050919050565b62000fcb62000fc58262000a46565b62000fa2565b82525050565b600062000fdf828762000f66565b60018201915062000ff1828662000fb6565b60148201915062001003828562000db2565b60208201915062001015828462000db2565b60208201915081905095945050505050565b7f457468657273706f7457616c6c6574466163746f72793a3a206f6e6c79206f7760008201527f6e65720000000000000000000000000000000000000000000000000000000000602082015250565b60006200108560238362000cf5565b9150620010928262001027565b604082019050919050565b60006020820190508181036000830152620010b88162001076565b9050919050565b7f457468657273706f7457616c6c6574466163746f72793a3a206e6577206f776e60008201527f65722063616e6e6f74206265207a65726f206164647265737300000000000000602082015250565b60006200111d60398362000cf5565b91506200112a82620010bf565b604082019050919050565b6000602082019050818103600083015262001150816200110e565b905091905056fe608060405234801561001057600080fd5b506040516102693803806102698339818101604052810190610032919061012d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610098906101b7565b60405180910390fd5b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55506101d7565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100fa826100cf565b9050919050565b61010a816100ef565b811461011557600080fd5b50565b60008151905061012781610101565b92915050565b600060208284031215610143576101426100ca565b5b600061015184828501610118565b91505092915050565b600082825260208201905092915050565b7f496e76616c696420616464726573732070726f76696465640000000000000000600082015250565b60006101a160188361015a565b91506101ac8261016b565b602082019050919050565b600060208201905081810360008301526101d081610194565b9050919050565b6084806101e56000396000f3fe608060405260007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490503660008037600080366000845af43d6000803e600081036049573d6000fd5b3d6000f3fea2646970667358221220944f101dfbe5ae64a06bf792bf76ac8b196ce934917ffe22f84f36b8ab5eb5a364736f6c63430008170033a2646970667358221220d6ca909315e792da340dd0e99a6da15e201d55a4b70fa44f7bc9ea474e3abea764736f6c63430008170033";

type EtherspotWalletFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EtherspotWalletFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EtherspotWalletFactory__factory extends ContractFactory {
  constructor(...args: EtherspotWalletFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EtherspotWalletFactory> {
    return super.deploy(
      _owner,
      overrides || {}
    ) as Promise<EtherspotWalletFactory>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override attach(address: string): EtherspotWalletFactory {
    return super.attach(address) as EtherspotWalletFactory;
  }
  override connect(signer: Signer): EtherspotWalletFactory__factory {
    return super.connect(signer) as EtherspotWalletFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EtherspotWalletFactoryInterface {
    return new utils.Interface(_abi) as EtherspotWalletFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EtherspotWalletFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as EtherspotWalletFactory;
  }
}
