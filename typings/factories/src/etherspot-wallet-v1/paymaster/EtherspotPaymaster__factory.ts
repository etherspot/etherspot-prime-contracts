/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  EtherspotPaymaster,
  EtherspotPaymasterInterface,
} from "../../../../src/etherspot-wallet-v1/paymaster/EtherspotPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
    ],
    name: "AddedBatchToWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddedToWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
    ],
    name: "RemovedBatchFromWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "RemovedFromWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SponsorSuccessful",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_accounts",
        type: "address[]",
      },
    ],
    name: "addBatchToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "addToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sponsor",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "check",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositFunds",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
    ],
    name: "getHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sponsor",
        type: "address",
      },
    ],
    name: "getSponsorBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "paymasterAndData",
        type: "bytes",
      },
    ],
    name: "parsePaymasterAndData",
    outputs: [
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actualUserOpFeePerGas",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_accounts",
        type: "address[]",
      },
    ],
    name: "removeBatchFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "removeFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001c2f38038062001c2f8339810160408190526200003491620001a5565b8033806200005d57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b62000068816200008d565b506200007481620000dd565b506001600160a01b0316608052506001600255620001fb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516301ffc9a760e01b815263122a0e9b60e31b60048201526000906001600160a01b038316906301ffc9a790602401602060405180830381865afa1580156200012c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001529190620001d7565b620001a05760405162461bcd60e51b815260206004820152601e60248201527f49456e747279506f696e7420696e74657266616365206d69736d617463680000604482015260640162000054565b919050565b600060208284031215620001b857600080fd5b81516001600160a01b0381168114620001d057600080fd5b9392505050565b600060208284031215620001ea57600080fd5b81518015158114620001d057600080fd5b6080516119e762000248600039600081816102c7015281816104030152818161056601528181610834015281816108ce0152818161093e015281816109dd0152610ba201526119e76000f3fe60806040526004361061011f5760003560e01c8063a3d19d8c116100a0578063c399ec8811610064578063c399ec881461034e578063de481f1714610363578063e2c41dbc14610399578063e43252d7146103a1578063f2fde38b146103c157600080fd5b8063a3d19d8c14610295578063b0d691fe146102b5578063b3154db0146102e9578063bb9fe6bf14610319578063c23a5cea1461032e57600080fd5b8063715018a6116100e7578063715018a6146101de5780637c627b21146101f35780638ab1d681146102135780638da5cb5b1461023357806394d4ad601461026557600080fd5b80630396cb6014610124578063123a6a8214610139578063155dd5ee1461015957806352b7512c146101795780635829c5f5146101b0575b600080fd5b610137610132366004611422565b6103e1565b005b34801561014557600080fd5b5061013761015436600461144f565b61046c565b34801561016557600080fd5b506101376101743660046114c4565b6104bc565b34801561018557600080fd5b506101996101943660046114f6565b6105d7565b6040516101a7929190611544565b60405180910390f35b3480156101bc57600080fd5b506101d06101cb3660046115b4565b6105fb565b6040519081526020016101a7565b3480156101ea57600080fd5b5061013761070b565b3480156101ff57600080fd5b5061013761020e36600461165b565b61071f565b34801561021f57600080fd5b5061013761022e3660046116db565b61073b565b34801561023f57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016101a7565b34801561027157600080fd5b506102856102803660046116f8565b61077d565b6040516101a7949392919061173a565b3480156102a157600080fd5b506101376102b036600461144f565b6107c5565b3480156102c157600080fd5b5061024d7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102f557600080fd5b50610309610304366004611786565b610815565b60405190151581526020016101a7565b34801561032557600080fd5b5061013761082a565b34801561033a57600080fd5b506101376103493660046116db565b6108a7565b34801561035a57600080fd5b506101d0610926565b34801561036f57600080fd5b506101d061037e3660046116db565b6001600160a01b031660009081526003602052604090205490565b6101376109b6565b3480156103ad57600080fd5b506101376103bc3660046116db565b610a4d565b3480156103cd57600080fd5b506101376103dc3660046116db565b610a8f565b6103e9610aca565b604051621cb65b60e51b815263ffffffff821660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690630396cb609034906024016000604051808303818588803b15801561045057600080fd5b505af1158015610464573d6000803e3d6000fd5b505050505050565b6104768282610af7565b81816040516104869291906117bf565b6040519081900381209033907f75dcdde27b71b9c529ae8b02072e1eeda244662d2d9c2effea5a1afb8fc913f390600090a35050565b6104c4610b3e565b336000908152600360205260409020548111156105405760405162461bcd60e51b815260206004820152602f60248201527f457468657273706f745061796d61737465723a3a206e6f7420656e6f7567682060448201526e6465706f73697465642066756e647360881b60648201526084015b60405180910390fd5b61054a3382610b66565b60405163040b850f60e31b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063205c287890604401600060405180830381600087803b1580156105b257600080fd5b505af11580156105c6573d6000803e3d6000fd5b505050506105d46001600255565b50565b606060006105e3610b97565b6105ee858585610c07565b915091505b935093915050565b600083358060208601356106126040880188611801565b604051610620929190611848565b6040519081900390206106366060890189611801565b604051610644929190611848565b604051908190039020608089013561065f60e08b018b611801565b61066e91603491601491611858565b61067791611882565b604080516001600160a01b0390971660208801528601949094526060850192909252608084015260a08084019190915260c08084019290925287013560e0830152860135610100820152466101208201523061014082015265ffffffffffff80861661016083015284166101808201526101a001604051602081830303815290604052805190602001209150509392505050565b610713610aca565b61071d6000610ea7565b565b610727610b97565b6107348585858585610ef7565b5050505050565b61074481610f7d565b6040516001600160a01b0382169033907fd288ab5da2e1f37cf384a1565a3f905ad289b092fbdd31950dbbfef148c04f8890600090a350565b600080368161078f8560348189611858565b81019061079c91906118a0565b909450925085856107af603460406118e9565b6107ba928290611858565b949793965094505050565b6107cf8282611061565b81816040516107df9291906117bf565b6040519081900381209033907f6eabb183ad4385932735ae89018089a008c58e814451b618bc0dd0e7922f6d1390600090a35050565b600061082183836110a3565b90505b92915050565b610832610aca565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561088d57600080fd5b505af11580156108a1573d6000803e3d6000fd5b50505050565b6108af610aca565b60405163611d2e7560e11b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063c23a5cea90602401600060405180830381600087803b15801561091257600080fd5b505af1158015610734573d6000803e3d6000fd5b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561098d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b191906118fc565b905090565b6109be610b3e565b6109c833346110d1565b60405163b760faf960e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b760faf99034906024016000604051808303818588803b158015610a2a57600080fd5b505af1158015610a3e573d6000803e3d6000fd5b505050505061071d6001600255565b610a56816110f9565b6040516001600160a01b0382169033907f0c4b48e75a1f7ab0a9a2f786b5d6c1f7789020403bff177fb54d46edb89ccc0090600090a350565b610a97610aca565b6001600160a01b038116610ac157604051631e4fbdf760e01b815260006004820152602401610537565b6105d481610ea7565b6000546001600160a01b0316331461071d5760405163118cdaa760e01b8152336004820152602401610537565b60005b81811015610b3957610b31838383818110610b1757610b17611915565b9050602002016020810190610b2c91906116db565b610f7d565b600101610afa565b505050565b6002805403610b6057604051633ee5aeb560e01b815260040160405180910390fd5b60028055565b6001600160a01b03821660009081526003602052604081208054839290610b8e90849061192b565b90915550505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461071d5760405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b6044820152606401610537565b6060600080803681610c1f61028060e08b018b611801565b929650909450925090506040811480610c385750604181145b610cb45760405162461bcd60e51b815260206004820152604160248201527f457468657273706f745061796d61737465723a3a20696e76616c69642073696760448201527f6e6174757265206c656e67746820696e207061796d6173746572416e644461746064820152606160f81b608482015260a401610537565b6000610cf7610cc48b87876105fb565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b905060008a3590506000610d418386868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506111e792505050565b9050610d4d81836110a3565b610d7e57610d5d60018888611211565b604051806020016040528060008152509098509850505050505050506105f3565b6fffffffffffffffffffffffffffffffff60c08d0135166000610da3619c408361193e565b90506000610db1828e6118e9565b905080610dd3856001600160a01b031660009081526003602052604090205490565b1015610e3e5760405162461bcd60e51b815260206004820152603460248201527f457468657273706f745061796d61737465723a3a2053706f6e736f72207061796044820152736d61737465722066756e647320746f6f206c6f7760601b6064820152608401610537565b610e488482610b66565b604080516001600160a01b038087166020830152871691810191909152606081018290526080810183905260a001604051602081830303815290604052610e9160008c8c611211565b9b509b5050505050505050505050935093915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000808080610f0887890189611955565b9350935093509350610f2f848288610f2091906118e9565b610f2a908561192b565b6110d1565b604080516001600160a01b038087168252851660208201527f2c5d05f0498c9d2ef9ad6bec38fa7d6693827331e772b11b0864225ad20507f4910160405180910390a1505050505050505050565b6001600160a01b038116610fce5760405162461bcd60e51b815260206004820152601860248201527757686974656c6973743a3a205a65726f206164647265737360401b6044820152606401610537565b610fd833826110a3565b6110335760405162461bcd60e51b815260206004820152602660248201527f57686974656c6973743a3a204163636f756e74206973206e6f742077686974656044820152651b1a5cdd195960d21b6064820152608401610537565b3360009081526001602090815260408083206001600160a01b0394909416835292905220805460ff19169055565b60005b81811015610b395761109b83838381811061108157611081611915565b905060200201602081019061109691906116db565b6110f9565b600101611064565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6001600160a01b03821660009081526003602052604081208054839290610b8e9084906118e9565b6001600160a01b03811661114a5760405162461bcd60e51b815260206004820152601860248201527757686974656c6973743a3a205a65726f206164647265737360401b6044820152606401610537565b61115433826110a3565b156111b45760405162461bcd60e51b815260206004820152602a60248201527f57686974656c6973743a3a204163636f756e7420697320616c726561647920776044820152691a1a5d195b1a5cdd195960b21b6064820152608401610537565b3360009081526001602081815260408084206001600160a01b03959095168452939052919020805460ff19169091179055565b6000806000806111f78686611249565b9250925092506112078282611296565b5090949350505050565b600060d08265ffffffffffff16901b60a08465ffffffffffff16901b8561123957600061123c565b60015b60ff161717949350505050565b600080600083516041036112835760208401516040850151606086015160001a61127588828585611353565b95509550955050505061128f565b50508151600091506002905b9250925092565b60008260038111156112aa576112aa61199b565b036112b3575050565b60018260038111156112c7576112c761199b565b036112e55760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156112f9576112f961199b565b0361131a5760405163fce698f760e01b815260048101829052602401610537565b600382600381111561132e5761132e61199b565b0361134f576040516335e2f38360e21b815260048101829052602401610537565b5050565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084111561138e5750600091506003905082611418565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa1580156113e2573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661140e57506000925060019150829050611418565b9250600091508190505b9450945094915050565b60006020828403121561143457600080fd5b813563ffffffff8116811461144857600080fd5b9392505050565b6000806020838503121561146257600080fd5b823567ffffffffffffffff8082111561147a57600080fd5b818501915085601f83011261148e57600080fd5b81358181111561149d57600080fd5b8660208260051b85010111156114b257600080fd5b60209290920196919550909350505050565b6000602082840312156114d657600080fd5b5035919050565b600061012082840312156114f057600080fd5b50919050565b60008060006060848603121561150b57600080fd5b833567ffffffffffffffff81111561152257600080fd5b61152e868287016114dd565b9660208601359650604090950135949350505050565b604081526000835180604084015260005b818110156115725760208187018101516060868401015201611555565b506000606082850101526060601f19601f8301168401019150508260208301529392505050565b803565ffffffffffff811681146115af57600080fd5b919050565b6000806000606084860312156115c957600080fd5b833567ffffffffffffffff8111156115e057600080fd5b6115ec868287016114dd565b9350506115fb60208501611599565b915061160960408501611599565b90509250925092565b60008083601f84011261162457600080fd5b50813567ffffffffffffffff81111561163c57600080fd5b60208301915083602082850101111561165457600080fd5b9250929050565b60008060008060006080868803121561167357600080fd5b85356003811061168257600080fd5b9450602086013567ffffffffffffffff81111561169e57600080fd5b6116aa88828901611612565b9699909850959660408101359660609091013595509350505050565b6001600160a01b03811681146105d457600080fd5b6000602082840312156116ed57600080fd5b8135611448816116c6565b6000806020838503121561170b57600080fd5b823567ffffffffffffffff81111561172257600080fd5b61172e85828601611612565b90969095509350505050565b600065ffffffffffff808716835280861660208401525060606040830152826060830152828460808401376000608084840101526080601f19601f850116830101905095945050505050565b6000806040838503121561179957600080fd5b82356117a4816116c6565b915060208301356117b4816116c6565b809150509250929050565b60008184825b858110156117f65781356117d8816116c6565b6001600160a01b0316835260209283019291909101906001016117c5565b509095945050505050565b6000808335601e1984360301811261181857600080fd5b83018035915067ffffffffffffffff82111561183357600080fd5b60200191503681900382131561165457600080fd5b8183823760009101908152919050565b6000808585111561186857600080fd5b8386111561187557600080fd5b5050820193919092039150565b8035602083101561082457600019602084900360031b1b1692915050565b600080604083850312156118b357600080fd5b6118bc83611599565b91506118ca60208401611599565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610824576108246118d3565b60006020828403121561190e57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b81810381811115610824576108246118d3565b8082028115828204841417610824576108246118d3565b6000806000806080858703121561196b57600080fd5b8435611976816116c6565b93506020850135611986816116c6565b93969395505050506040820135916060013590565b634e487b7160e01b600052602160045260246000fdfea264697066735822122071e3661c91da7e5d2f48ab24eec2ed74be6c5eaf0c358be9363275046e66310064736f6c63430008170033";

type EtherspotPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EtherspotPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EtherspotPaymaster__factory extends ContractFactory {
  constructor(...args: EtherspotPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EtherspotPaymaster> {
    return super.deploy(
      _entryPoint,
      overrides || {}
    ) as Promise<EtherspotPaymaster>;
  }
  override getDeployTransaction(
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_entryPoint, overrides || {});
  }
  override attach(address: string): EtherspotPaymaster {
    return super.attach(address) as EtherspotPaymaster;
  }
  override connect(signer: Signer): EtherspotPaymaster__factory {
    return super.connect(signer) as EtherspotPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EtherspotPaymasterInterface {
    return new utils.Interface(_abi) as EtherspotPaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EtherspotPaymaster {
    return new Contract(address, _abi, signerOrProvider) as EtherspotPaymaster;
  }
}
