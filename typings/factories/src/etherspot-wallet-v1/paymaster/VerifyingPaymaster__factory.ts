/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  VerifyingPaymaster,
  VerifyingPaymasterInterface,
} from "../../../../src/etherspot-wallet-v1/paymaster/VerifyingPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "_verifyingSigner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newVerifyingSigner",
        type: "address",
      },
    ],
    name: "VerifyingSignerUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
    ],
    name: "getHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "paymasterAndData",
        type: "bytes",
      },
    ],
    name: "parsePaymasterAndData",
    outputs: [
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actualUserOpFeePerGas",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newVerifyingSigner",
        type: "address",
      },
    ],
    name: "updateVerifyingSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifyingSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162002393380380620023938339818101604052810190620000379190620003a6565b8133600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ae5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a59190620003fe565b60405180910390fd5b620000bf816200014f60201b60201c565b50620000d1816200021360201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000567565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8073ffffffffffffffffffffffffffffffffffffffff166301ffc9a77f915074d8000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016200026e919062000458565b602060405180830381865afa1580156200028c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002b29190620004b2565b620002f4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002eb9062000545565b60405180910390fd5b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200032982620002fc565b9050919050565b60006200033d826200031c565b9050919050565b6200034f8162000330565b81146200035b57600080fd5b50565b6000815190506200036f8162000344565b92915050565b62000380816200031c565b81146200038c57600080fd5b50565b600081519050620003a08162000375565b92915050565b60008060408385031215620003c057620003bf620002f7565b5b6000620003d0858286016200035e565b9250506020620003e3858286016200038f565b9150509250929050565b620003f8816200031c565b82525050565b6000602082019050620004156000830184620003ed565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b62000452816200041b565b82525050565b60006020820190506200046f600083018462000447565b92915050565b60008115159050919050565b6200048c8162000475565b81146200049857600080fd5b50565b600081519050620004ac8162000481565b92915050565b600060208284031215620004cb57620004ca620002f7565b5b6000620004db848285016200049b565b91505092915050565b600082825260208201905092915050565b7f49456e747279506f696e7420696e74657266616365206d69736d617463680000600082015250565b60006200052d601e83620004e4565b91506200053a82620004f5565b602082019050919050565b6000602082019050818103600083015262000560816200051e565b9050919050565b608051611ddf620005b46000396000818161038a015281816104210152818161070f0152818161073b015281816107c501528181610855015281816108f40152610a8f0152611ddf6000f3fe6080604052600436106100f35760003560e01c806393b941211161008a578063c23a5cea11610059578063c23a5cea146102f9578063c399ec8814610322578063d0e30db01461034d578063f2fde38b14610357576100f3565b806393b941211461024e57806394d4ad6014610277578063b0d691fe146102b7578063bb9fe6bf146102e2576100f3565b80635829c5f5116100c65780635829c5f5146101a6578063715018a6146101e35780637c627b21146101fa5780638da5cb5b14610223576100f3565b80630396cb60146100f8578063205c28781461011457806323d9ac9b1461013d57806352b7512c14610168575b600080fd5b610112600480360381019061010d9190611159565b610380565b005b34801561012057600080fd5b5061013b6004803603810190610136919061121a565b610417565b005b34801561014957600080fd5b506101526104b0565b60405161015f919061127b565b60405180910390f35b34801561017457600080fd5b5061018f600480360381019061018a91906112f1565b6104d6565b60405161019d9291906113ff565b60405180910390f35b3480156101b257600080fd5b506101cd60048036038101906101c8919061146d565b6104f9565b6040516101da91906114eb565b60405180910390f35b3480156101ef57600080fd5b506101f86105d7565b005b34801561020657600080fd5b50610221600480360381019061021c9190611590565b6105eb565b005b34801561022f57600080fd5b50610238610607565b604051610245919061127b565b60405180910390f35b34801561025a57600080fd5b5061027560048036038101906102709190611644565b610630565b005b34801561028357600080fd5b5061029e60048036038101906102999190611671565b6106b3565b6040516102ae9493929190611709565b60405180910390f35b3480156102c357600080fd5b506102cc61070d565b6040516102d991906117a8565b60405180910390f35b3480156102ee57600080fd5b506102f7610731565b005b34801561030557600080fd5b50610320600480360381019061031b91906117c3565b6107bb565b005b34801561032e57600080fd5b50610337610851565b60405161034491906117f0565b60405180910390f35b6103556108f2565b005b34801561036357600080fd5b5061037e60048036038101906103799190611644565b610980565b005b610388610a06565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16630396cb6034836040518363ffffffff1660e01b81526004016103e2919061181a565b6000604051808303818588803b1580156103fb57600080fd5b505af115801561040f573d6000803e3d6000fd5b505050505050565b61041f610a06565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663205c287883836040518363ffffffff1660e01b815260040161047a929190611844565b600060405180830381600087803b15801561049457600080fd5b505af11580156104a8573d6000803e3d6000fd5b505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060006104e2610a8d565b6104ed858585610b1d565b91509150935093915050565b60008061050585610cad565b905080856020013586806040019061051d919061187c565b60405161052b92919061190f565b6040518091039020878060600190610543919061187c565b60405161055192919061190f565b60405180910390208860800135898060e0019061056e919061187c565b60149060349261058093929190611932565b9061058b9190611985565b60001c8a60a001358b60c0013546308d8d6040516020016105b79c9b9a999897969594939291906119e4565b604051602081830303815290604052805190602001209150509392505050565b6105df610a06565b6105e96000610cbd565b565b6105f3610a8d565b6106008585858585610d81565b5050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610638610a06565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f51d754ac8f7adf515a023f2c423e01ef97817c1af33cb63b36f1fe12fde2d91a816040516106a8919061127b565b60405180910390a150565b600080366000858560349080926106cc93929190611932565b8101906106d99190611a9e565b80945081955050508585604060346106f19190611b0d565b90809261070093929190611932565b9150915092959194509250565b7f000000000000000000000000000000000000000000000000000000000000000081565b610739610a06565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156107a157600080fd5b505af11580156107b5573d6000803e3d6000fd5b50505050565b6107c3610a06565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c23a5cea826040518263ffffffff1660e01b815260040161081c9190611b41565b600060405180830381600087803b15801561083657600080fd5b505af115801561084a573d6000803e3d6000fd5b5050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108ac919061127b565b602060405180830381865afa1580156108c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ed9190611b71565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b760faf934306040518363ffffffff1660e01b815260040161094c919061127b565b6000604051808303818588803b15801561096557600080fd5b505af1158015610979573d6000803e3d6000fd5b5050505050565b610988610a06565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109fa5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109f1919061127b565b60405180910390fd5b610a0381610cbd565b50565b610a0e610dbc565b73ffffffffffffffffffffffffffffffffffffffff16610a2c610607565b73ffffffffffffffffffffffffffffffffffffffff1614610a8b57610a4f610dbc565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a82919061127b565b60405180910390fd5b565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1290611bfb565b60405180910390fd5b565b606060008080366000610b3e898060e00190610b39919061187c565b6106b3565b93509350935093506040828290501480610b5b5750604182829050145b610b9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9190611c8d565b60405180910390fd5b6000610baf610baa8b87876104f9565b610dc4565b9050610bff8184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610dfa565b73ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c7e57610c5f60018686610e26565b6040518060200160405280600081525090965096505050505050610ca5565b610c8a60008686610e26565b60405180602001604052806000815250909650965050505050505b935093915050565b6000808235905080915050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db390611cf9565b60405180910390fd5b600033905090565b60007f19457468657265756d205369676e6564204d6573736167653a0a33320000000060005281601c52603c6000209050919050565b600080600080610e0a8686610e5f565b925092509250610e1a8282610ebb565b82935050505092915050565b600060d08265ffffffffffff16901b60a08465ffffffffffff16901b85610e4e576000610e51565b60015b60ff16171790509392505050565b60008060006041845103610ea45760008060006020870151925060408701519150606087015160001a9050610e968882858561101f565b955095509550505050610eb4565b60006002855160001b9250925092505b9250925092565b60006003811115610ecf57610ece611d19565b5b826003811115610ee257610ee1611d19565b5b031561101b5760016003811115610efc57610efb611d19565b5b826003811115610f0f57610f0e611d19565b5b03610f46576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026003811115610f5a57610f59611d19565b5b826003811115610f6d57610f6c611d19565b5b03610fb2578060001c6040517ffce698f7000000000000000000000000000000000000000000000000000000008152600401610fa991906117f0565b60405180910390fd5b600380811115610fc557610fc4611d19565b5b826003811115610fd857610fd7611d19565b5b0361101a57806040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260040161101191906114eb565b60405180910390fd5b5b5050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c111561105f576000600385925092509250611109565b6000600188888888604051600081526020016040526040516110849493929190611d64565b6020604051602081039080840390855afa1580156110a6573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110fa57600060016000801b93509350935050611109565b8060008060001b935093509350505b9450945094915050565b600080fd5b600080fd5b600063ffffffff82169050919050565b6111368161111d565b811461114157600080fd5b50565b6000813590506111538161112d565b92915050565b60006020828403121561116f5761116e611113565b5b600061117d84828501611144565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111b182611186565b9050919050565b6111c1816111a6565b81146111cc57600080fd5b50565b6000813590506111de816111b8565b92915050565b6000819050919050565b6111f7816111e4565b811461120257600080fd5b50565b600081359050611214816111ee565b92915050565b6000806040838503121561123157611230611113565b5b600061123f858286016111cf565b925050602061125085828601611205565b9150509250929050565b600061126582611186565b9050919050565b6112758161125a565b82525050565b6000602082019050611290600083018461126c565b92915050565b600080fd5b600061012082840312156112b2576112b1611296565b5b81905092915050565b6000819050919050565b6112ce816112bb565b81146112d957600080fd5b50565b6000813590506112eb816112c5565b92915050565b60008060006060848603121561130a57611309611113565b5b600084013567ffffffffffffffff81111561132857611327611118565b5b6113348682870161129b565b9350506020611345868287016112dc565b925050604061135686828701611205565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b8381101561139a57808201518184015260208101905061137f565b60008484015250505050565b6000601f19601f8301169050919050565b60006113c282611360565b6113cc818561136b565b93506113dc81856020860161137c565b6113e5816113a6565b840191505092915050565b6113f9816111e4565b82525050565b6000604082019050818103600083015261141981856113b7565b905061142860208301846113f0565b9392505050565b600065ffffffffffff82169050919050565b61144a8161142f565b811461145557600080fd5b50565b60008135905061146781611441565b92915050565b60008060006060848603121561148657611485611113565b5b600084013567ffffffffffffffff8111156114a4576114a3611118565b5b6114b08682870161129b565b93505060206114c186828701611458565b92505060406114d286828701611458565b9150509250925092565b6114e5816112bb565b82525050565b600060208201905061150060008301846114dc565b92915050565b6003811061151357600080fd5b50565b60008135905061152581611506565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126115505761154f61152b565b5b8235905067ffffffffffffffff81111561156d5761156c611530565b5b60208301915083600182028301111561158957611588611535565b5b9250929050565b6000806000806000608086880312156115ac576115ab611113565b5b60006115ba88828901611516565b955050602086013567ffffffffffffffff8111156115db576115da611118565b5b6115e78882890161153a565b945094505060406115fa88828901611205565b925050606061160b88828901611205565b9150509295509295909350565b6116218161125a565b811461162c57600080fd5b50565b60008135905061163e81611618565b92915050565b60006020828403121561165a57611659611113565b5b60006116688482850161162f565b91505092915050565b6000806020838503121561168857611687611113565b5b600083013567ffffffffffffffff8111156116a6576116a5611118565b5b6116b28582860161153a565b92509250509250929050565b6116c78161142f565b82525050565b82818337600083830152505050565b60006116e8838561136b565b93506116f58385846116cd565b6116fe836113a6565b840190509392505050565b600060608201905061171e60008301876116be565b61172b60208301866116be565b818103604083015261173e8184866116dc565b905095945050505050565b6000819050919050565b600061176e61176961176484611186565b611749565b611186565b9050919050565b600061178082611753565b9050919050565b600061179282611775565b9050919050565b6117a281611787565b82525050565b60006020820190506117bd6000830184611799565b92915050565b6000602082840312156117d9576117d8611113565b5b60006117e7848285016111cf565b91505092915050565b600060208201905061180560008301846113f0565b92915050565b6118148161111d565b82525050565b600060208201905061182f600083018461180b565b92915050565b61183e816111a6565b82525050565b60006040820190506118596000830185611835565b61186660208301846113f0565b9392505050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126118995761189861186d565b5b80840192508235915067ffffffffffffffff8211156118bb576118ba611872565b5b6020830192506001820236038313156118d7576118d6611877565b5b509250929050565b600081905092915050565b60006118f683856118df565b93506119038385846116cd565b82840190509392505050565b600061191c8284866118ea565b91508190509392505050565b600080fd5b600080fd5b6000808585111561194657611945611928565b5b838611156119575761195661192d565b5b6001850283019150848603905094509492505050565b600082905092915050565b600082821b905092915050565b6000611991838361196d565b8261199c81356112bb565b925060208210156119dc576119d77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83602003600802611978565b831692505b505092915050565b6000610180820190506119fa600083018f61126c565b611a07602083018e6113f0565b611a14604083018d6114dc565b611a21606083018c6114dc565b611a2e608083018b6114dc565b611a3b60a083018a6113f0565b611a4860c08301896113f0565b611a5560e08301886114dc565b611a636101008301876113f0565b611a7161012083018661126c565b611a7f6101408301856116be565b611a8d6101608301846116be565b9d9c50505050505050505050505050565b60008060408385031215611ab557611ab4611113565b5b6000611ac385828601611458565b9250506020611ad485828601611458565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611b18826111e4565b9150611b23836111e4565b9250828201905080821115611b3b57611b3a611ade565b5b92915050565b6000602082019050611b566000830184611835565b92915050565b600081519050611b6b816111ee565b92915050565b600060208284031215611b8757611b86611113565b5b6000611b9584828501611b5c565b91505092915050565b600082825260208201905092915050565b7f53656e646572206e6f7420456e747279506f696e740000000000000000000000600082015250565b6000611be5601583611b9e565b9150611bf082611baf565b602082019050919050565b60006020820190508181036000830152611c1481611bd8565b9050919050565b7f566572696679696e675061796d61737465723a20696e76616c6964207369676e60008201527f6174757265206c656e67746820696e207061796d6173746572416e6444617461602082015250565b6000611c77604083611b9e565b9150611c8282611c1b565b604082019050919050565b60006020820190508181036000830152611ca681611c6a565b9050919050565b7f6d757374206f7665727269646500000000000000000000000000000000000000600082015250565b6000611ce3600d83611b9e565b9150611cee82611cad565b602082019050919050565b60006020820190508181036000830152611d1281611cd6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060ff82169050919050565b611d5e81611d48565b82525050565b6000608082019050611d7960008301876114dc565b611d866020830186611d55565b611d9360408301856114dc565b611da060608301846114dc565b9594505050505056fea26469706673582212205183b73d1d1e0e6ba5a847fdd6ad10318e9dad242198e0e9c3f0f5e6f94d9b3964736f6c63430008170033";

type VerifyingPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifyingPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VerifyingPaymaster__factory extends ContractFactory {
  constructor(...args: VerifyingPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _entryPoint: PromiseOrValue<string>,
    _verifyingSigner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VerifyingPaymaster> {
    return super.deploy(
      _entryPoint,
      _verifyingSigner,
      overrides || {}
    ) as Promise<VerifyingPaymaster>;
  }
  override getDeployTransaction(
    _entryPoint: PromiseOrValue<string>,
    _verifyingSigner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _entryPoint,
      _verifyingSigner,
      overrides || {}
    );
  }
  override attach(address: string): VerifyingPaymaster {
    return super.attach(address) as VerifyingPaymaster;
  }
  override connect(signer: Signer): VerifyingPaymaster__factory {
    return super.connect(signer) as VerifyingPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifyingPaymasterInterface {
    return new utils.Interface(_abi) as VerifyingPaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VerifyingPaymaster {
    return new Contract(address, _abi, signerOrProvider) as VerifyingPaymaster;
  }
}
