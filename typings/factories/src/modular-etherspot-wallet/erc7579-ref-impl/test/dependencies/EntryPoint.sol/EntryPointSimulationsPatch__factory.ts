/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../../common";
import type {
  EntryPointSimulationsPatch,
  EntryPointSimulationsPatchInterface,
} from "../../../../../../../src/modular-etherspot-wallet/erc7579-ref-impl/test/dependencies/EntryPoint.sol/EntryPointSimulationsPatch";

const _abi = [
  {
    inputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "ret",
        type: "bytes",
      },
    ],
    name: "DelegateAndRevert",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "opIndex",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "FailedOp",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "opIndex",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "inner",
        type: "bytes",
      },
    ],
    name: "FailedOpWithRevert",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "PostOpReverted",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAddressResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureValidationFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
    ],
    name: "AccountDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "BeforeExecution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalDeposit",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "revertReason",
        type: "bytes",
      },
    ],
    name: "PostOpRevertReason",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureAggregatorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unstakeDelaySec",
        type: "uint256",
      },
    ],
    name: "StakeLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawTime",
        type: "uint256",
      },
    ],
    name: "StakeUnlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StakeWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasUsed",
        type: "uint256",
      },
    ],
    name: "UserOperationEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "UserOperationPrefundTooLow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "revertReason",
        type: "bytes",
      },
    ],
    name: "UserOperationRevertReason",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "paymasterAndData",
        type: "bytes",
      },
    ],
    name: "_validateSenderAndPaymaster",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "delegateAndRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint256",
        name: "deposit",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "staked",
        type: "bool",
      },
      {
        internalType: "uint112",
        name: "stake",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
      {
        internalType: "uint48",
        name: "withdrawTime",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getDepositInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "deposit",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "staked",
            type: "bool",
          },
          {
            internalType: "uint112",
            name: "stake",
            type: "uint112",
          },
          {
            internalType: "uint32",
            name: "unstakeDelaySec",
            type: "uint32",
          },
          {
            internalType: "uint48",
            name: "withdrawTime",
            type: "uint48",
          },
        ],
        internalType: "struct IStakeManager.DepositInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint192",
        name: "key",
        type: "uint192",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
    ],
    name: "getSenderAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getUserOpHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "initCode",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
              {
                internalType: "bytes32",
                name: "accountGasLimits",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "gasFees",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "paymasterAndData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
            ],
            internalType: "struct PackedUserOperation[]",
            name: "userOps",
            type: "tuple[]",
          },
          {
            internalType: "contract IAggregator",
            name: "aggregator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.UserOpsPerAggregator[]",
        name: "opsPerAggregator",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleAggregatedOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation[]",
        name: "ops",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint192",
        name: "key",
        type: "uint192",
      },
    ],
    name: "incrementNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "entrypointAddr",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "paymasterVerificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "paymasterPostOpGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "paymaster",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
            ],
            internalType: "struct EntryPoint.MemoryUserOp",
            name: "mUserOp",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "userOpHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "contextOffset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
        ],
        internalType: "struct EntryPoint.UserOpInfo",
        name: "opInfo",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    name: "innerHandleOp",
    outputs: [
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint192",
        name: "",
        type: "uint192",
      },
    ],
    name: "nonceSequenceNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "op",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "targetCallData",
        type: "bytes",
      },
    ],
    name: "simulateHandleOp",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "accountValidationData",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paymasterValidationData",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "targetSuccess",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "targetResult",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPointSimulations.ExecutionResult",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "simulateValidation",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "preOpGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "prefund",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "accountValidationData",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "paymasterValidationData",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "paymasterContext",
                type: "bytes",
              },
            ],
            internalType: "struct IEntryPoint.ReturnInfo",
            name: "returnInfo",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "stake",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "unstakeDelaySec",
                type: "uint256",
              },
            ],
            internalType: "struct IStakeManager.StakeInfo",
            name: "senderInfo",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "stake",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "unstakeDelaySec",
                type: "uint256",
              },
            ],
            internalType: "struct IStakeManager.StakeInfo",
            name: "factoryInfo",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "stake",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "unstakeDelaySec",
                type: "uint256",
              },
            ],
            internalType: "struct IStakeManager.StakeInfo",
            name: "paymasterInfo",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "aggregator",
                type: "address",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "stake",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "unstakeDelaySec",
                    type: "uint256",
                  },
                ],
                internalType: "struct IStakeManager.StakeInfo",
                name: "stakeInfo",
                type: "tuple",
              },
            ],
            internalType: "struct IEntryPoint.AggregatorStakeInfo",
            name: "aggregatorInfo",
            type: "tuple",
          },
        ],
        internalType: "struct IEntryPointSimulations.ValidationResult",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a0604052604051620000129062000100565b604051809103906000f0801580156200002f573d6000803e3d6000fd5b506001600160a01b039081166080526040805180820182526000808252825180840190935280835260208381019182528201839052905160038054919094166001600160a01b03199182161790935590516004555160055560078054909116301790553480156200009f57600080fd5b50600160025560644310620000fa5760405162461bcd60e51b815260206004820152601660248201527f73686f756c64206e6f74206265206465706c6f79656400000000000000000000604482015260640160405180910390fd5b6200010e565b610213806200438683390190565b60805161425f620001276000396000505061425f6000f3fe6080604052600436106101385760003560e01c8063765e827f116100ab578063b760faf91161006f578063b760faf9146104d6578063bb9fe6bf146104e9578063c23a5cea146104fe578063c3bce0091461051e578063dbed18e01461054b578063fc7e286d1461056b57600080fd5b8063765e827f14610429578063850aaf6214610449578063957122ab1461046957806397b2dcb9146104895780639b249f69146104b657600080fd5b80631b2e01b8116100fd5780631b2e01b814610203578063205c28781461023b57806322cdde4c1461025b57806335567e1a1461027b5780635287ce12146102db57806370a08231146103f357600080fd5b806242dc531461014d57806301ffc9a7146101805780630396cb60146101b05780630bd28e3b146101c357806319ab453c146101e357600080fd5b366101485761014633610613565b005b600080fd5b34801561015957600080fd5b5061016d61016836600461346f565b610634565b6040519081526020015b60405180910390f35b34801561018c57600080fd5b506101a061019b366004613534565b6107bf565b6040519015158152602001610177565b6101466101be36600461355e565b610847565b3480156101cf57600080fd5b506101466101de36600461359b565b610ad6565b3480156101ef57600080fd5b506101466101fe3660046135b6565b610b0d565b34801561020f57600080fd5b5061016d61021e3660046135d3565b600160209081526000928352604080842090915290825290205481565b34801561024757600080fd5b50610146610256366004613608565b610b33565b34801561026757600080fd5b5061016d61027636600461364d565b610c84565b34801561028757600080fd5b5061016d6102963660046135d3565b6001600160a01b03821660009081526001602090815260408083206001600160c01b038516845290915290819020549082901b67ffffffffffffffff19161792915050565b3480156102e757600080fd5b506103986102f63660046135b6565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152506001600160a01b031660009081526020818152604091829020825160a0810184528154815260019091015460ff811615159282019290925261010082046001600160701b031692810192909252600160781b810463ffffffff166060830152600160981b900465ffffffffffff16608082015290565b6040516101779190600060a082019050825182526020830151151560208301526001600160701b03604084015116604083015263ffffffff606084015116606083015265ffffffffffff608084015116608083015292915050565b3480156103ff57600080fd5b5061016d61040e3660046135b6565b6001600160a01b031660009081526020819052604090205490565b34801561043557600080fd5b506101466104443660046136c5565b610cc6565b34801561045557600080fd5b5061014661046436600461371b565b610e42565b34801561047557600080fd5b5061014661048436600461376f565b610ec1565b34801561049557600080fd5b506104a96104a43660046137f3565b610fbe565b60405161017791906138a4565b3480156104c257600080fd5b506101466104d13660046138f3565b6110f0565b6101466104e43660046135b6565b610613565b3480156104f557600080fd5b5061014661119b565b34801561050a57600080fd5b506101466105193660046135b6565b6112cf565b34801561052a57600080fd5b5061053e61053936600461364d565b6114f3565b6040516101779190613934565b34801561055757600080fd5b506101466105663660046136c5565b6116a9565b34801561057757600080fd5b506105d06105863660046135b6565b6000602081905290815260409020805460019091015460ff81169061010081046001600160701b031690600160781b810463ffffffff1690600160981b900465ffffffffffff1685565b6040805195865293151560208601526001600160701b039092169284019290925263ffffffff909116606083015265ffffffffffff16608082015260a001610177565b60015b600581101561062757600101610616565b61063082611ac2565b5050565b6000805a905033301461068e5760405162461bcd60e51b815260206004820152601760248201527f4141393220696e7465726e616c2063616c6c206f6e6c7900000000000000000060448201526064015b60405180910390fd5b8451606081015160a082015181016127100160405a603f02816106b3576106b3613a07565b0410156106cb5763deaddead60e01b60005260206000fd5b87516000901561075f5760006106e8846000015160008c86611b0b565b90508061075d5760006106fc610800611b23565b8051909150156107575784600001516001600160a01b03168a602001517f1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a20187602001518460405161074e929190613a1d565b60405180910390a35b60019250505b505b600088608001515a86030190506107af828a8a8a8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250879250611b4f915050565b955050505050505b949350505050565b60006001600160e01b0319821663307e35b760e11b14806107f057506001600160e01b0319821663122a0e9b60e31b145b8061080b57506001600160e01b0319821663cf28ef9760e01b145b8061082657506001600160e01b03198216633e84f02160e01b145b8061084157506301ffc9a760e01b6001600160e01b03198316145b92915050565b33600090815260208190526040902063ffffffff82166108a95760405162461bcd60e51b815260206004820152601a60248201527f6d757374207370656369667920756e7374616b652064656c61790000000000006044820152606401610685565b600181015463ffffffff600160781b9091048116908316101561090e5760405162461bcd60e51b815260206004820152601c60248201527f63616e6e6f7420646563726561736520756e7374616b652074696d65000000006044820152606401610685565b600181015460009061092f90349061010090046001600160701b0316613a4c565b9050600081116109765760405162461bcd60e51b81526020600482015260126024820152711b9bc81cdd185ad9481cdc1958da599a595960721b6044820152606401610685565b6001600160701b038111156109be5760405162461bcd60e51b815260206004820152600e60248201526d7374616b65206f766572666c6f7760901b6044820152606401610685565b6040805160a08101825283548152600160208083018281526001600160701b0386811685870190815263ffffffff8a811660608801818152600060808a0181815233808352828a52918c90209a518b55965199909801805494519151965165ffffffffffff16600160981b0265ffffffffffff60981b1997909416600160781b029690961669ffffffffffffffffffff60781b1991909516610100026effffffffffffffffffffffffffff0019991515999099166effffffffffffffffffffffffffffff1990941693909317979097179190911691909117179055835185815290810192909252917fa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01910160405180910390a2505050565b3360009081526001602090815260408083206001600160c01b03851684529091528120805491610b0583613a5f565b919050555050565b600780546001600160a01b0319166001600160a01b038316179055610b30611d12565b50565b3360009081526020819052604090208054821115610b935760405162461bcd60e51b815260206004820152601960248201527f576974686472617720616d6f756e7420746f6f206c61726765000000000000006044820152606401610685565b8054610ba0908390613a78565b8155604080516001600160a01b03851681526020810184905233917fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb910160405180910390a26000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114610c33576040519150601f19603f3d011682016040523d82523d6000602084013e610c38565b606091505b5050905080610c7e5760405162461bcd60e51b81526020600482015260126024820152716661696c656420746f20776974686472617760701b6044820152606401610685565b50505050565b6000610c8f82611d87565b6040805160208101929092523090820152466060820152608001604051602081830303815290604052805190602001209050919050565b610cce611da0565b816000816001600160401b03811115610ce957610ce9613269565b604051908082528060200260200182016040528015610d2257816020015b610d0f6130e4565b815260200190600190039081610d075790505b50905060005b82811015610d9b576000828281518110610d4457610d44613a8b565b60200260200101519050600080610d7f848a8a87818110610d6757610d67613a8b565b9050602002810190610d799190613aa1565b85611dc8565b91509150610d908483836000611fce565b505050600101610d28565b506040516000907fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972908290a160005b83811015610e2557610e1981888884818110610de857610de8613a8b565b9050602002810190610dfa9190613aa1565b858481518110610e0c57610e0c613a8b565b602002602001015161216a565b90910190600101610dca565b50610e308482612426565b505050610e3d6001600255565b505050565b600080846001600160a01b03168484604051610e5f929190613ac2565b600060405180830381855af49150503d8060008114610e9a576040519150601f19603f3d011682016040523d82523d6000602084013e610e9f565b606091505b50915091508181604051632650415560e21b8152600401610685929190613ad2565b83158015610ed757506001600160a01b0383163b155b15610f245760405162461bcd60e51b815260206004820152601960248201527f41413230206163636f756e74206e6f74206465706c6f796564000000000000006044820152606401610685565b60148110610f9c576000610f3b6014828486613aed565b610f4491613b17565b60601c9050803b600003610f9a5760405162461bcd60e51b815260206004820152601b60248201527f41413330207061796d6173746572206e6f74206465706c6f79656400000000006044820152606401610685565b505b60405162461bcd60e51b81526020600482015260006024820152604401610685565b610ff96040518060c0016040528060008152602001600081526020016000815260200160008152602001600015158152602001606081525090565b611001611da0565b6110096130e4565b6110128661251f565b60008061102160008985611dc8565b91509150600061103360008a8661216a565b9050600060606001600160a01b038a16156110ab57896001600160a01b03168989604051611062929190613ac2565b6000604051808303816000865af19150503d806000811461109f576040519150601f19603f3d011682016040523d82523d6000602084013e6110a4565b606091505b5090925090505b6040518060c001604052808760800151815260200184815260200186815260200185815260200183151581526020018281525096505050505050506107b76001600255565b60006111046008546001600160a01b031690565b6001600160a01b031663570e1a3684846040518363ffffffff1660e01b8152600401611131929190613b75565b6020604051808303816000875af1158015611150573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111749190613b89565b604051633653dc0360e11b81526001600160a01b0382166004820152909150602401610685565b33600090815260208190526040812060018101549091600160781b90910463ffffffff1690036111fa5760405162461bcd60e51b815260206004820152600a6024820152691b9bdd081cdd185ad95960b21b6044820152606401610685565b600181015460ff166112425760405162461bcd60e51b8152602060048201526011602482015270616c726561647920756e7374616b696e6760781b6044820152606401610685565b600181015460009061126190600160781b900463ffffffff1642613ba6565b60018301805460ff65ffffffffffff60981b011916600160981b65ffffffffffff841690810260ff19169190911790915560405190815290915033907ffa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a906020015b60405180910390a25050565b336000908152602081905260409020600181015461010090046001600160701b0316806113355760405162461bcd60e51b81526020600482015260146024820152734e6f207374616b6520746f20776974686472617760601b6044820152606401610685565b6001820154600160981b900465ffffffffffff166113955760405162461bcd60e51b815260206004820152601d60248201527f6d7573742063616c6c20756e6c6f636b5374616b6528292066697273740000006044820152606401610685565b600182015442600160981b90910465ffffffffffff1611156113f95760405162461bcd60e51b815260206004820152601b60248201527f5374616b65207769746864726177616c206973206e6f742064756500000000006044820152606401610685565b600182018054610100600160c81b0319169055604080516001600160a01b03851681526020810183905233917fb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3910160405180910390a26000836001600160a01b03168260405160006040518083038185875af1925050503d806000811461149d576040519150601f19603f3d011682016040523d82523d6000602084013e6114a2565b606091505b5050905080610c7e5760405162461bcd60e51b815260206004820152601860248201527f6661696c656420746f207769746864726177207374616b6500000000000000006044820152606401610685565b6114fb61317c565b6115036130e4565b61150c8361251f565b60008061151b60008685611dc8565b915091506000611532846000015160e001516125f9565b845151909150600090611544906125f9565b9050611563604051806040016040528060008152602001600081525090565b36600061157360408b018b613bcc565b90925090506000601482101561158a5760006115a5565b611598601460008486613aed565b6115a191613b17565b60601c5b90506115b0816125f9565b9350505050600085905060006040518060a0016040528089608001518152602001896040015181526020018881526020018781526020016115f28a6060015190565b90526040805180820182526003546001600160a01b0390811682528251808401909352600454835260055460208481019190915282019290925291925083161580159061164957506001836001600160a01b031614155b15611676576040518060400160405280846001600160a01b03168152602001611671856125f9565b905290505b6040805160a081018252928352602083019590955293810192909252506060810192909252608082015295945050505050565b6116b1611da0565b816000805b8281101561181e57368686838181106116d1576116d1613a8b565b90506020028101906116e39190613c12565b90503660006116f28380613c28565b9092509050600061170960408501602086016135b6565b90506000196001600160a01b038216016117655760405162461bcd60e51b815260206004820152601760248201527f4141393620696e76616c69642061676772656761746f720000000000000000006044820152606401610685565b6001600160a01b03811615611802576001600160a01b038116632dd8113384846117926040890189613bcc565b6040518563ffffffff1660e01b81526004016117b19493929190613d95565b60006040518083038186803b1580156117c957600080fd5b505afa9250505080156117da575060015b6118025760405163086a9f7560e41b81526001600160a01b0382166004820152602401610685565b61180c8287613a4c565b955050600190930192506116b6915050565b506000816001600160401b0381111561183957611839613269565b60405190808252806020026020018201604052801561187257816020015b61185f6130e4565b8152602001906001900390816118575790505b5090506000805b8481101561194f573688888381811061189457611894613a8b565b90506020028101906118a69190613c12565b90503660006118b58380613c28565b909250905060006118cc60408501602086016135b6565b90508160005b8181101561193d5760008989815181106118ee576118ee613a8b565b602002602001015190506000806119118b898987818110610d6757610d67613a8b565b9150915061192184838389611fce565b8a61192b81613a5f565b9b5050600190930192506118d2915050565b50506001909401935061187992505050565b506040517fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f97290600090a150600080805b85811015611a7d573689898381811061199a5761199a613a8b565b90506020028101906119ac9190613c12565b90506119be60408201602083016135b6565b6001600160a01b03167f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d60405160405180910390a2366000611a008380613c28565b90925090508060005b81811015611a6c57611a4b88858584818110611a2757611a27613a8b565b9050602002810190611a399190613aa1565b8b8b81518110610e0c57610e0c613a8b565b611a559088613a4c565b965087611a6181613a5f565b985050600101611a09565b50506001909301925061197f915050565b506040516000907f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d908290a2611ab38682612426565b5050505050610e3d6001600255565b6000611ace823461264b565b9050816001600160a01b03167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4826040516112c391815260200190565b6000806000845160208601878987f195945050505050565b60603d82811115611b315750815b604051602082018101604052818152816000602083013e9392505050565b6000805a855190915060009081611b658261267e565b60e08301519091506001600160a01b038116611b845782519350611c40565b809350600088511115611c4057868202955060028a6002811115611baa57611baa613e12565b14611c405760a0830151604051637c627b2160e01b81526001600160a01b03831691637c627b2191611be6908e908d908c908990600401613e28565b600060405180830381600088803b158015611c0057600080fd5b5087f193505050508015611c12575060015b611c40576000611c23610800611b23565b905080604051632b5e552f60e21b81526004016106859190613e72565b5a60a0840151606085015160808c015192880399909901980190880380821115611c73576064600a828403020498909801975b50506040890151878302965086811015611ccf5760028b6002811115611c9b57611c9b613e12565b03611cbe57809650611cac8a6126a8565b611cb98a6000898b6126f7565b611d04565b63deadaa5160e01b60005260206000fd5b868103611cdc868261264b565b506000808d6002811115611cf257611cf2613e12565b149050611d018c828b8d6126f7565b50505b505050505050949350505050565b6007546040516135a560f21b602082015260609190911b6bffffffffffffffffffffffff19166022820152600160f81b603682015260009060370160408051808303601f190181529190528051602090910120600880546001600160a01b0319166001600160a01b0390921691909117905550565b6000611d9282612772565b805190602001209050919050565b6002805403611dc257604051633ee5aeb560e01b815260040160405180910390fd5b60028055565b60008060005a8451909150611ddd868261282a565b611de686610c84565b6020860152604081015161012082015161010083015160a08401516080850151606086015160c0870151861717171717176effffffffffffffffffffffffffffff811115611e765760405162461bcd60e51b815260206004820152601860248201527f41413934206761732076616c756573206f766572666c6f7700000000000000006044820152606401610685565b6000611ea58460c081015160a08201516080830151606084015160408501516101009095015194010101010290565b9050611eb48a8a8a8487612938565b9650611ec884600001518560200151612acf565b611f1e5789604051631101335b60e11b8152600401610685918152604060208201819052601a908201527f4141323520696e76616c6964206163636f756e74206e6f6e6365000000000000606082015260800190565b825a86031115611f7a5789604051631101335b60e11b8152600401610685918152604060208201819052601e908201527f41413236206f76657220766572696669636174696f6e4761734c696d69740000606082015260800190565b60e08401516060906001600160a01b031615611fa157611f9c8b8b8b85612b1c565b975090505b604089018290528060608a015260a08a01355a870301896080018181525050505050505050935093915050565b600080611fda85612cda565b91509150816001600160a01b0316836001600160a01b0316146120405785604051631101335b60e11b81526004016106859181526040602082018190526014908201527320a0991a1039b4b3b730ba3ab9329032b93937b960611b606082015260800190565b80156120985785604051631101335b60e11b81526004016106859181526040602082018190526017908201527f414132322065787069726564206f72206e6f7420647565000000000000000000606082015260800190565b60006120a385612cda565b925090506001600160a01b038116156120ff5786604051631101335b60e11b81526004016106859181526040602082018190526014908201527320a0999a1039b4b3b730ba3ab9329032b93937b960611b606082015260800190565b81156121615786604051631101335b60e11b81526004016106859181526040602082018190526021908201527f41413332207061796d61737465722065787069726564206f72206e6f742064756060820152606560f81b608082015260a00190565b50505050505050565b6000805a9050600061217d846060015190565b604051909150600090368261219560608a018a613bcc565b91509150606060008260038111156121ac57843591505b506372288ed160e01b6001600160e01b031982160161225a5760008b8b602001516040516024016121de929190613e85565b60408051601f198184030181529181526020820180516001600160e01b0316638dd7712f60e01b1790525190915030906242dc53906122259084908f908d90602401613f51565b604051602081830303815290604052915060e01b6020820180516001600160e01b0383818316178352505050509250506122af565b306001600160a01b03166242dc5385858d8b60405160240161227f9493929190613f91565b604051602081830303815290604052915060e01b6020820180516001600160e01b03838183161783525050505091505b602060008351602085016000305af1955060005198508460405250505050508061241c5760003d806020036122ea5760206000803e60005191505b5063deaddead60e01b810361233d5787604051631101335b60e11b8152600401610685918152604060208201819052600f908201526e41413935206f7574206f662067617360881b606082015260800190565b63deadaa5160e01b810361238e57600086608001515a61235d9087613a78565b6123679190613a4c565b6040880151909150612378886126a8565b61238588600083856126f7565b955061241a9050565b855180516020808901519201516001600160a01b0390911691907ff62676f440ff169a3a9afdbf812e89e7f95975ee8e5c31214ffdef631c5f4792906123d5610800611b23565b6040516123e3929190613a1d565b60405180910390a3600086608001515a6123fd9087613a78565b6124079190613a4c565b90506124166002888684611b4f565b9550505b505b5050509392505050565b6001600160a01b03821661247c5760405162461bcd60e51b815260206004820152601860248201527f4141393020696e76616c69642062656e656669636961727900000000000000006044820152606401610685565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146124c9576040519150601f19603f3d011682016040523d82523d6000602084013e6124ce565b606091505b5050905080610e3d5760405162461bcd60e51b815260206004820152601f60248201527f41413931206661696c65642073656e6420746f2062656e6566696369617279006044820152606401610685565b612527611d12565b3063957122ab61253a6040840184613bcc565b61254760208601866135b6565b61255460e0870187613bcc565b6040518663ffffffff1660e01b8152600401612574959493929190613fc8565b60006040518083038186803b15801561258c57600080fd5b505afa92505050801561259d575060015b610b30576125a961400a565b806308c379a0036125ed57506125bd614026565b806125c857506125ef565b80511561063057600081604051631101335b60e11b8152600401610685929190613a1d565b505b3d6000803e3d6000fd5b604080518082018252600080825260208083018281526001600160a01b03959095168252819052919091206001015461010081046001600160701b03168252600160781b900463ffffffff1690915290565b6001600160a01b038216600090815260208190526040812080548290612672908590613a4c565b91829055509392505050565b6101008101516101208201516000919080820361269c575092915050565b6107b782488301612d2d565b80518051602080840151928101516040519081526001600160a01b0390921692917f67b4fa9642f42120bf031f3051d1824b0fe25627945b27b8a6a65d5761d5482e910160405180910390a350565b835160e081015181516020808801519301516040516001600160a01b039384169492909316927f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f916127649189908990899093845291151560208401526040830152606082015260800190565b60405180910390a450505050565b606081356020830135600061279261278d6040870187613bcc565b612d45565b905060006127a661278d6060880188613bcc565b9050608086013560a087013560c088013560006127c961278d60e08c018c613bcc565b604080516001600160a01b039a909a1660208b015289810198909852606089019690965250608087019390935260a086019190915260c085015260e08401526101008084019190915281518084039091018152610120909201905292915050565b61283760208301836135b6565b6001600160a01b03168152602082810135908201526001600160801b036080808401358281166060850152811c604084015260a084013560c0808501919091528401359182166101008401521c61012082015236600061289a60e0850185613bcc565b9092509050801561291d5760348110156128f65760405162461bcd60e51b815260206004820152601d60248201527f4141393320696e76616c6964207061796d6173746572416e64446174610000006044820152606401610685565b6129008282612d58565b60a086015260808501526001600160a01b031660e0840152610c7e565b600060e084018190526080840181905260a084015250505050565b8251805160009190612957888761295260408b018b613bcc565b612dc0565b60e082015160006001600160a01b03821661299b576001600160a01b03831660009081526020819052604090205487811161299457808803612997565b60005b9150505b60208801516040516306608bdf60e21b81526001600160a01b038516916319822f7c9189916129d1918e919087906004016140af565b60206040518083038160008887f193505050508015612a0d575060408051601f3d908101601f19168201909252612a0a918101906140d4565b60015b612a385789612a1d610800611b23565b6040516365c8fd4d60e01b81526004016106859291906140ed565b94506001600160a01b038216612ac2576001600160a01b0383166000908152602081905260409020805480891115612abc578b604051631101335b60e11b81526004016106859181526040602082018190526017908201527f41413231206469646e2774207061792070726566756e64000000000000000000606082015260800190565b88900390555b5050505095945050505050565b6001600160a01b038216600090815260016020908152604080832084821c80855292528220805484916001600160401b038316919085612b0e83613a5f565b909155501495945050505050565b60606000805a855160e08101516001600160a01b03811660009081526020819052604090208054939450919290919087811015612ba5578a604051631101335b60e11b8152600401610685918152604060208201819052601e908201527f41413331207061796d6173746572206465706f73697420746f6f206c6f770000606082015260800190565b8781038260000181905550600084608001519050836001600160a01b03166352b7512c828d8d602001518d6040518563ffffffff1660e01b8152600401612bee939291906140af565b60006040518083038160008887f193505050508015612c2f57506040513d6000823e601f3d908101601f19168201604052612c2c919081019061412a565b60015b612c5a578b612c3f610800611b23565b6040516365c8fd4d60e01b81526004016106859291906141b5565b9098509650805a87031115612ccb578b604051631101335b60e11b81526004016106859181526040602082018190526027908201527f41413336206f766572207061796d6173746572566572696669636174696f6e47606082015266185cd31a5b5a5d60ca1b608082015260a00190565b50505050505094509492505050565b60008082600003612cf057506000928392509050565b6000612cfb84613073565b9050806040015165ffffffffffff16421180612d225750806020015165ffffffffffff1642105b905194909350915050565b6000818310612d3c5781612d3e565b825b9392505050565b6000604051828085833790209392505050565b60008080612d696014828688613aed565b612d7291613b17565b60601c612d83602460148789613aed565b612d8c916141f2565b60801c612d9d60346024888a613aed565b612da6916141f2565b9194506001600160801b0316925060801c90509250925092565b8015610c7e578251516001600160a01b0381163b15612e2b5784604051631101335b60e11b8152600401610685918152604060208201819052601f908201527f414131302073656e64657220616c726561647920636f6e737472756374656400606082015260800190565b6000612e3f6008546001600160a01b031690565b6001600160a01b031663570e1a3686600001516040015186866040518463ffffffff1660e01b8152600401612e75929190613b75565b60206040518083038160008887f1158015612e94573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190612eb99190613b89565b90506001600160a01b038116612f1b5785604051631101335b60e11b8152600401610685918152604060208201819052601b908201527f4141313320696e6974436f6465206661696c6564206f72204f4f470000000000606082015260800190565b816001600160a01b0316816001600160a01b031614612f855785604051631101335b60e11b815260040161068591815260406020808301829052908201527f4141313420696e6974436f6465206d7573742072657475726e2073656e646572606082015260800190565b806001600160a01b03163b600003612fe85785604051631101335b60e11b815260040161068591815260406020808301829052908201527f4141313520696e6974436f6465206d757374206372656174652073656e646572606082015260800190565b6000612ff76014828688613aed565b61300091613b17565b60601c9050826001600160a01b031686602001517fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d83896000015160e001516040516130629291906001600160a01b0392831681529116602082015260400190565b60405180910390a350505050505050565b60408051606081018252600080825260208201819052918101919091528160a081901c65ffffffffffff81166000036130af575065ffffffffffff5b604080516060810182526001600160a01b03909316835260d09490941c602083015265ffffffffffff16928101929092525090565b6040518060a0016040528061315760405180610140016040528060006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160008152602001600081525090565b8152602001600080191681526020016000815260200160008152602001600081525090565b6040518060a001604052806131b96040518060a0016040528060008152602001600081526020016000815260200160008152602001606081525090565b81526020016131db604051806040016040528060008152602001600081525090565b81526020016131fd604051806040016040528060008152602001600081525090565b815260200161321f604051806040016040528060008152602001600081525090565b815260200161322c613231565b905290565b604051806040016040528060006001600160a01b0316815260200161322c604051806040016040528060008152602001600081525090565b634e487b7160e01b600052604160045260246000fd5b60a081018181106001600160401b038211171561329e5761329e613269565b60405250565b601f8201601f191681016001600160401b03811182821017156132c9576132c9613269565b6040525050565b60405161014081016001600160401b03811182821017156132f3576132f3613269565b60405290565b60006001600160401b0382111561331257613312613269565b50601f01601f191660200190565b6001600160a01b0381168114610b3057600080fd5b803561334081613320565b919050565b60008183036101c081121561335957600080fd5b6040516133658161327f565b8092506101408083121561337857600080fd5b6133806132d0565b925061338b85613335565b83526020850135602084015260408501356040840152606085013560608401526080850135608084015260a085013560a084015260c085013560c08401526133d560e08601613335565b60e084015261010085810135908401526101208086013590840152918152908301356020820152610160830135604082015261018083013560608201526101a090920135608090920191909152919050565b60008083601f84011261343957600080fd5b5081356001600160401b0381111561345057600080fd5b60208301915083602082850101111561346857600080fd5b9250929050565b600080600080610200858703121561348657600080fd5b84356001600160401b038082111561349d57600080fd5b818701915087601f8301126134b157600080fd5b81356134bc816132f9565b6040516134c982826132a4565b8281528a60208487010111156134de57600080fd5b826020860160208301376000602084830101528098505050506135048860208901613345565b94506101e087013591508082111561351b57600080fd5b5061352887828801613427565b95989497509550505050565b60006020828403121561354657600080fd5b81356001600160e01b031981168114612d3e57600080fd5b60006020828403121561357057600080fd5b813563ffffffff81168114612d3e57600080fd5b80356001600160c01b038116811461334057600080fd5b6000602082840312156135ad57600080fd5b612d3e82613584565b6000602082840312156135c857600080fd5b8135612d3e81613320565b600080604083850312156135e657600080fd5b82356135f181613320565b91506135ff60208401613584565b90509250929050565b6000806040838503121561361b57600080fd5b823561362681613320565b946020939093013593505050565b6000610120828403121561364757600080fd5b50919050565b60006020828403121561365f57600080fd5b81356001600160401b0381111561367557600080fd5b6107b784828501613634565b60008083601f84011261369357600080fd5b5081356001600160401b038111156136aa57600080fd5b6020830191508360208260051b850101111561346857600080fd5b6000806000604084860312156136da57600080fd5b83356001600160401b038111156136f057600080fd5b6136fc86828701613681565b909450925050602084013561371081613320565b809150509250925092565b60008060006040848603121561373057600080fd5b833561373b81613320565b925060208401356001600160401b0381111561375657600080fd5b61376286828701613427565b9497909650939450505050565b60008060008060006060868803121561378757600080fd5b85356001600160401b038082111561379e57600080fd5b6137aa89838a01613427565b9097509550602088013591506137bf82613320565b909350604087013590808211156137d557600080fd5b506137e288828901613427565b969995985093965092949392505050565b6000806000806060858703121561380957600080fd5b84356001600160401b038082111561382057600080fd5b61382c88838901613634565b95506020870135915061383e82613320565b9093506040860135908082111561351b57600080fd5b60005b8381101561386f578181015183820152602001613857565b50506000910152565b60008151808452613890816020860160208601613854565b601f01601f19169290920160200192915050565b60208152815160208201526020820151604082015260408201516060820152606082015160808201526080820151151560a0820152600060a083015160c0808401526107b760e0840182613878565b6000806020838503121561390657600080fd5b82356001600160401b0381111561391c57600080fd5b61392885828601613427565b90969095509350505050565b602080825282516101408383015280516101608401529081015161018083015260408101516101a083015260608101516101c08301526080015160a06101e0830152600090613987610200840182613878565b905060208401516139a5604085018280518252602090810151910152565b506040840151805160808581019190915260209182015160a08601526060860151805160c087015282015160e086015285015180516001600160a01b031661010086015280820151805161012087015290910151610140850152509392505050565b634e487b7160e01b600052601260045260246000fd5b8281526040602082015260006107b76040830184613878565b634e487b7160e01b600052601160045260246000fd5b8082018082111561084157610841613a36565b600060018201613a7157613a71613a36565b5060010190565b8181038181111561084157610841613a36565b634e487b7160e01b600052603260045260246000fd5b6000823561011e19833603018112613ab857600080fd5b9190910192915050565b8183823760009101908152919050565b82151581526040602082015260006107b76040830184613878565b60008085851115613afd57600080fd5b83861115613b0a57600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff198135818116916014851015613b445780818660140360031b1b83161692505b505092915050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6020815260006107b7602083018486613b4c565b600060208284031215613b9b57600080fd5b8151612d3e81613320565b65ffffffffffff818116838216019080821115613bc557613bc5613a36565b5092915050565b6000808335601e19843603018112613be357600080fd5b8301803591506001600160401b03821115613bfd57600080fd5b60200191503681900382131561346857600080fd5b60008235605e19833603018112613ab857600080fd5b6000808335601e19843603018112613c3f57600080fd5b8301803591506001600160401b03821115613c5957600080fd5b6020019150600581901b360382131561346857600080fd5b6000808335601e19843603018112613c8857600080fd5b83016020810192503590506001600160401b03811115613ca757600080fd5b80360382131561346857600080fd5b6000610120613cd584613cc885613335565b6001600160a01b03169052565b60208301356020850152613cec6040840184613c71565b826040870152613cff8387018284613b4c565b92505050613d106060840184613c71565b8583036060870152613d23838284613b4c565b925050506080830135608085015260a083013560a085015260c083013560c0850152613d5260e0840184613c71565b85830360e0870152613d65838284613b4c565b92505050610100613d7881850185613c71565b86840383880152613d8a848284613b4c565b979650505050505050565b6040808252810184905260006060600586901b830181019083018783805b89811015613dfb57868503605f190184528235368c900361011e19018112613dd9578283fd5b613de5868d8301613cb6565b9550506020938401939290920191600101613db3565b505050508281036020840152613d8a818587613b4c565b634e487b7160e01b600052602160045260246000fd5b600060038610613e4857634e487b7160e01b600052602160045260246000fd5b85825260806020830152613e5f6080830186613878565b6040830194909452506060015292915050565b602081526000612d3e6020830184613878565b604081526000613e986040830185613cb6565b90508260208301529392505050565b805180516001600160a01b031683526020810151602084015260408101516040840152606081015160608401526080810151608084015260a081015160a084015260c081015160c084015260e0810151613f0c60e08501826001600160a01b03169052565b5061010081810151908401526101209081015190830152602081015161014083015260408101516101608301526060810151610180830152608001516101a090910152565b6000610200808352613f6581840187613878565b9050613f746020840186613ea7565b8281036101e0840152613f878185613878565b9695505050505050565b6000610200808352613fa68184018789613b4c565b9050613fb56020840186613ea7565b8281036101e0840152613d8a8185613878565b606081526000613fdc606083018789613b4c565b6001600160a01b03861660208401528281036040840152613ffe818587613b4c565b98975050505050505050565b600060033d11156140235760046000803e5060005160e01c5b90565b600060443d10156140345790565b6040516003193d81016004833e81513d6001600160401b03816024840111818411171561406357505050505090565b828501915081518181111561407b5750505050505090565b843d87010160208285010111156140955750505050505090565b6140a4602082860101876132a4565b509095945050505050565b6060815260006140c26060830186613cb6565b60208301949094525060400152919050565b6000602082840312156140e657600080fd5b5051919050565b82815260606020820152600d60608201526c10504c8cc81c995d995c9d1959609a1b608082015260a0604082015260006107b760a0830184613878565b6000806040838503121561413d57600080fd5b82516001600160401b0381111561415357600080fd5b8301601f8101851361416457600080fd5b805161416f816132f9565b60405161417c82826132a4565b82815287602084860101111561419157600080fd5b6141a2836020830160208701613854565b6020969096015195979596505050505050565b82815260606020820152600d60608201526c10504cccc81c995d995c9d1959609a1b608082015260a0604082015260006107b760a0830184613878565b6fffffffffffffffffffffffffffffffff198135818116916010851015613b445760109490940360031b84901b169092169291505056fea26469706673582212208a1a79a9a01747e794404bc1fe219359b23cd77127a10d6c3c6e3c689284d72a64736f6c63430008170033608060405234801561001057600080fd5b506101f3806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063570e1a3614610030575b600080fd5b61004361003e3660046100ec565b61005f565b6040516001600160a01b03909116815260200160405180910390f35b60008061006f601482858761015e565b61007891610188565b60601c9050600061008c846014818861015e565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525084519495509360209350849250905082850182875af190506000519350806100e357600093505b50505092915050565b600080602083850312156100ff57600080fd5b823567ffffffffffffffff8082111561011757600080fd5b818501915085601f83011261012b57600080fd5b81358181111561013a57600080fd5b86602082850101111561014c57600080fd5b60209290920196919550909350505050565b6000808585111561016e57600080fd5b8386111561017b57600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156101b55780818660140360031b1b83161692505b50509291505056fea2646970667358221220c992483c577aff38880819383802a49b4e946aaf05dbcbbe42df1550fd175b5b64736f6c63430008170033";

type EntryPointSimulationsPatchConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EntryPointSimulationsPatchConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EntryPointSimulationsPatch__factory extends ContractFactory {
  constructor(...args: EntryPointSimulationsPatchConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EntryPointSimulationsPatch> {
    return super.deploy(overrides || {}) as Promise<EntryPointSimulationsPatch>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EntryPointSimulationsPatch {
    return super.attach(address) as EntryPointSimulationsPatch;
  }
  override connect(signer: Signer): EntryPointSimulationsPatch__factory {
    return super.connect(signer) as EntryPointSimulationsPatch__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EntryPointSimulationsPatchInterface {
    return new utils.Interface(_abi) as EntryPointSimulationsPatchInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EntryPointSimulationsPatch {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as EntryPointSimulationsPatch;
  }
}
