/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  BootstrapUtil,
  BootstrapUtilInterface,
} from "../../../../../../src/modular-etherspot-wallet/erc7579-ref-impl/test/Bootstrap.t.sol/BootstrapUtil";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "module",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "_makeBootstrapConfig",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "module",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct BootstrapConfig",
        name: "config",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "modules",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "datas",
        type: "bytes[]",
      },
    ],
    name: "makeBootstrapConfig",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "module",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct BootstrapConfig[]",
        name: "configs",
        type: "tuple[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "module",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "makeBootstrapConfig",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "module",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct BootstrapConfig[]",
        name: "config",
        type: "tuple[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161001d9061005f565b604051809103906000f080158015610039573d6000803e3d6000fd5b50600080546001600160a01b0319166001600160a01b039290921691909117905561006c565b6115ac8061070383390190565b6106888061007b6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063619f811c146100465780637967ae111461006f578063811fc0dc1461008f575b600080fd5b610059610054366004610432565b6100a2565b6040516100669190610567565b60405180910390f35b61008261007d3660046105cb565b61017b565b604051610066919061060f565b61005961009d3660046105cb565b6101db565b6060825167ffffffffffffffff8111156100be576100be6102ab565b60405190808252806020026020018201604052801561010457816020015b6040805180820190915260008152606060208201528152602001906001900390816100dc5790505b50905060005b83518110156101745761014f84828151811061012857610128610629565b602002602001015184838151811061014257610142610629565b602002602001015161017b565b82828151811061016157610161610629565b602090810291909101015260010161010a565b5092915050565b604080518082018252606060208201526001600160a01b038416815290516101a790839060240161063f565b60408051601f19818403018152919052602080820180516001600160e01b03166306d61fe760e41b17905282015292915050565b604080516001808252818301909252606091816020015b6040805180820190915260008152606060208201528152602001906001900390816101f2579050509050828160008151811061023057610230610629565b60209081029190910101516001600160a01b03909116905260405161025990839060240161063f565b60408051601f198184030181529190526020810180516001600160e01b03166306d61fe760e41b1790528151829060009061029657610296610629565b60200260200101516020018190525092915050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156102ea576102ea6102ab565b604052919050565b600067ffffffffffffffff82111561030c5761030c6102ab565b5060051b60200190565b80356001600160a01b038116811461032d57600080fd5b919050565b600082601f83011261034357600080fd5b813567ffffffffffffffff81111561035d5761035d6102ab565b610370601f8201601f19166020016102c1565b81815284602083860101111561038557600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f8301126103b357600080fd5b813560206103c86103c3836102f2565b6102c1565b82815260059290921b840181019181810190868411156103e757600080fd5b8286015b8481101561042757803567ffffffffffffffff81111561040b5760008081fd5b6104198986838b0101610332565b8452509183019183016103eb565b509695505050505050565b6000806040838503121561044557600080fd5b823567ffffffffffffffff8082111561045d57600080fd5b818501915085601f83011261047157600080fd5b813560206104816103c3836102f2565b82815260059290921b840181019181810190898411156104a057600080fd5b948201945b838610156104c5576104b686610316565b825294820194908201906104a5565b965050860135925050808211156104db57600080fd5b506104e8858286016103a2565b9150509250929050565b6000815180845260005b81811015610518576020818501810151868301820152016104fc565b506000602082860101526020601f19601f83011685010191505092915050565b60018060a01b038151168252600060208201516040602085015261055f60408501826104f2565b949350505050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b828110156105be57603f198886030184526105ac858351610538565b94509285019290850190600101610590565b5092979650505050505050565b600080604083850312156105de57600080fd5b6105e783610316565b9150602083013567ffffffffffffffff81111561060357600080fd5b6104e885828601610332565b6020815260006106226020830184610538565b9392505050565b634e487b7160e01b600052603260045260246000fd5b60208152600061062260208301846104f256fea2646970667358221220dde1087575b49dbd1b586a080ba8d0fd5fa4f6ed403633830c592cf7bfa51e6b64736f6c63430008170033608060405234801561001057600080fd5b5061158c806100206000396000f3fe60806040526004361061007f5760003560e01c8063855713681161004e578063855713681461025a578063b0d691fe14610288578063ea5f61d0146102ab578063eac9b20d146102cb57610086565b80630a664dba146101bb5780635e87556d146101ed578063642219af1461021a5780636b0d5cc41461023a57610086565b3661008657005b61009b6000356001600160e01b0319166102f8565b600080356001600160e01b03191681526000805160206115378339815191526020526040902080546001600160a01b03811690600160a01b900460f81b8161010957604051632464e76d60e11b81526001600160e01b03196000351660048201526024015b60405180910390fd5b61011781607f60f91b6103ac565b1561016b5760408051368101909152366000823760408051601481019091523360601b90526000803660140183865afa90506101593d60408051918201905290565b3d6000823e81610167573d81fd5b3d81f35b6101768160006103ac565b156101b95760408051368101909152366000823760408051601481019091523360601b9052600080366014018382875af190506101593d60408051918201905290565b005b3480156101c757600080fd5b506101d06103c3565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101f957600080fd5b5061020d610208366004610fab565b6103f2565b6040516101e491906110b8565b34801561022657600080fd5b506101b9610235366004610fab565b61047b565b34801561024657600080fd5b506101b96102553660046110e3565b6106c7565b34801561026657600080fd5b5061027a610275366004611168565b6106d7565b6040516101e4929190611194565b34801561029457600080fd5b506f71727de22e5e9d8baf0edac6f37da0326101d0565b3480156102b757600080fd5b5061027a6102c6366004611168565b610714565b3480156102d757600080fd5b506102eb6102e63660046111f7565b610744565b6040516101e49190611221565b6001600160e01b031981166000908152600080516020611537833981519152602090815260408083206001018054825181850281018501909352808352919290919083018282801561037357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610355575b505050505090506103848133610817565b15156000036103a8576040516332cf492b60e11b8152336004820152602401610100565b5050565b6001600160f81b0319828116908216145b92915050565b60006103ed7f36e05829dd1b9a4411d96a3549582172d7f071c1c0db5c573fcf94eb284316085490565b905090565b606030306001600160a01b031663642219af8a8a8a8a8a8a8a60405160240161042197969594939291906113a6565b604051602081830303815290604052915060e01b6020820180516001600160e01b03838183161783525050505060405160200161045f929190611404565b6040516020818303038152906040529050979650505050505050565b60005b868110156104fa576104f288888381811061049b5761049b611430565b90506020028101906104ad9190611446565b6104bb906020810190611466565b8989848181106104cd576104cd611430565b90506020028101906104df9190611446565b6104ed906020810190611483565b61082d565b60010161047e565b5060005b848110156105bc57600086868381811061051a5761051a611430565b905060200281019061052c9190611446565b61053a906020810190611466565b6001600160a01b0316146105b4576105b486868381811061055d5761055d611430565b905060200281019061056f9190611446565b61057d906020810190611466565b87878481811061058f5761058f611430565b90506020028101906105a19190611446565b6105af906020810190611483565b6108b4565b6001016104fe565b5060006105cc6020850185611466565b6001600160a01b0316146105fc576105fc6105ea6020850185611466565b6105f76020860186611483565b6108df565b60005b818110156106bd57600083838381811061061b5761061b611430565b905060200281019061062d9190611446565b61063b906020810190611466565b6001600160a01b0316146106b5576106b583838381811061065e5761065e611430565b90506020028101906106709190611446565b61067e906020810190611466565b84848481811061069057610690611430565b90506020028101906106a29190611446565b6106b0906020810190611483565b610966565b6001016105ff565b5050505050505050565b6106d283838361082d565b505050565b606060007ff88ce1fdb7fb1cbd3282e49729100fa3f2d6ee9f797961fe4fb1871cea89ea02610707818686610bd7565b92509250505b9250929050565b606060007ff88ce1fdb7fb1cbd3282e49729100fa3f2d6ee9f797961fe4fb1871cea89ea03610707818686610bd7565b6040805160608082018352600080835260208084018290528385018390526001600160e01b0319861682526000805160206115378339815191528152908490208451928301855280546001600160a01b0381168452600160a01b900460f81b6001600160f81b03191683830152600181018054865181850281018501885281815295969495929486019383018282801561080757602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116107e9575b5050505050815250509050919050565b6000806108248484610d74565b95945050505050565b7ff88ce1fdb7fb1cbd3282e49729100fa3f2d6ee9f797961fe4fb1871cea89ea026108588185610dda565b6040516306d61fe760e41b81526001600160a01b03851690636d61fe709061088690869086906004016114ca565b600060405180830381600087803b1580156108a057600080fd5b505af11580156106bd573d6000803e3d6000fd5b7ff88ce1fdb7fb1cbd3282e49729100fa3f2d6ee9f797961fe4fb1871cea89ea036108588185610dda565b60006109097f36e05829dd1b9a4411d96a3549582172d7f071c1c0db5c573fcf94eb284316085490565b90506001600160a01b0381161561093e5760405163741cbe0360e01b81526001600160a01b0382166004820152602401610100565b610858847f36e05829dd1b9a4411d96a3549582172d7f071c1c0db5c573fcf94eb2843160855565b600082828080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525060408051818a01356020818102601f01601f19168301909352969750893596918a018035965090945060609350915b818110156109e8576020810283810160600135908601526001016109c9565b505060408101356020818301033560608181528183850160208301379350610a1e92508591506001600160f81b031990506103ac565b15610a3c57604051633accf26360e11b815260040160405180910390fd5b6001600160e01b03198416600090815260008051602061153783398151915260205260409020546001600160a01b031615610ab95760405162461bcd60e51b815260206004820152601e60248201527f46756e6374696f6e2073656c6563746f7220616c7265616479207573656400006044820152606401610100565b604080516060810182526001600160a01b038a1681526001600160f81b0319851660208201529081018390527ff88ce1fdb7fb1cbd3282e49729100fa3f2d6ee9f797961fe4fb1871cea89ea026001600160e01b0319861660009081526002919091016020908152604091829020835181548584015160f81c600160a01b026001600160a81b03199091166001600160a01b0390921691909117178155918301518051610b6c9260018501920190610eec565b50506040516306d61fe760e41b81526001600160a01b038a169150636d61fe7090610b9b9084906004016110b8565b600060405180830381600087803b158015610bb557600080fd5b505af1158015610bc9573d6000803e3d6000fd5b505050505050505050505050565b606060006001600160a01b038416600114801590610bfa5750610bfa8585610eb0565b15610c2357604051637c84ecfb60e01b81526001600160a01b0385166004820152602401610100565b82600003610c445760405163f725081760e01b815260040160405180910390fd5b8267ffffffffffffffff811115610c5d57610c5d6114de565b604051908082528060200260200182016040528015610c86578160200160208202803683370190505b506001600160a01b03808616600090815260208890526040812054929450911691505b6001600160a01b03821615801590610ccb57506001600160a01b038216600114155b8015610cd657508381105b15610d305781838281518110610cee57610cee611430565b6001600160a01b039283166020918202929092018101919091529281166000908152928790526040909220549091169080610d288161150a565b915050610ca9565b6001600160a01b038216600114610d685782610d4d600183611523565b81518110610d5d57610d5d611430565b602002602001015191505b80835250935093915050565b81516000908190815b81811015610dcc57846001600160a01b0316868281518110610da157610da1611430565b60200260200101516001600160a01b031603610dc45792506001915061070d9050565b600101610d7d565b506000958695509350505050565b6001600160a01b0381161580610df957506001600160a01b0381166001145b15610e2257604051637c84ecfb60e01b81526001600160a01b0382166004820152602401610100565b6001600160a01b038181166000908152602084905260409020541615610e6657604051631034f46960e21b81526001600160a01b0382166004820152602401610100565b60016000818152602093909352604080842080546001600160a01b039485168087529286208054959091166001600160a01b03199586161790559190935280549091169091179055565b600060016001600160a01b03831614801590610ee557506001600160a01b038281166000908152602085905260409020541615155b9392505050565b828054828255906000526020600020908101928215610f41579160200282015b82811115610f4157825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610f0c565b50610f4d929150610f51565b5090565b5b80821115610f4d5760008155600101610f52565b60008083601f840112610f7857600080fd5b50813567ffffffffffffffff811115610f9057600080fd5b6020830191508360208260051b850101111561070d57600080fd5b60008060008060008060006080888a031215610fc657600080fd5b873567ffffffffffffffff80821115610fde57600080fd5b610fea8b838c01610f66565b909950975060208a013591508082111561100357600080fd5b61100f8b838c01610f66565b909750955060408a013591508082111561102857600080fd5b908901906040828c03121561103c57600080fd5b9093506060890135908082111561105257600080fd5b5061105f8a828b01610f66565b989b979a50959850939692959293505050565b6000815180845260005b818110156110985760208185018101518683018201520161107c565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610ee56020830184611072565b6001600160a01b03811681146110e057600080fd5b50565b6000806000604084860312156110f857600080fd5b8335611103816110cb565b9250602084013567ffffffffffffffff8082111561112057600080fd5b818601915086601f83011261113457600080fd5b81358181111561114357600080fd5b87602082850101111561115557600080fd5b6020830194508093505050509250925092565b6000806040838503121561117b57600080fd5b8235611186816110cb565b946020939093013593505050565b604080825283519082018190526000906020906060840190828701845b828110156111d65781516001600160a01b0316845292840192908401906001016111b1565b5050506001600160a01b039490941660209390930192909252509092915050565b60006020828403121561120957600080fd5b81356001600160e01b031981168114610ee557600080fd5b602080825282516001600160a01b0390811683830152838201516001600160f81b031916604080850191909152840151606080850152805160808501819052600093929183019190849060a08701905b8083101561129357845184168252938501936001929092019190850190611271565b50979650505050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b600081356112d5816110cb565b6001600160a01b03168352602082013536839003601e190181126112f857600080fd5b820160208101903567ffffffffffffffff81111561131557600080fd5b80360382131561132457600080fd5b6040602086015261082460408601828461129f565b6000838385526020808601955060208560051b830101846000805b8881101561139857858403601f19018a52823536899003603e19018112611379578283fd5b611385858a83016112c8565b9a86019a94505091840191600101611354565b509198975050505050505050565b6080815260006113ba60808301898b611339565b82810360208401526113cd81888a611339565b905082810360408401526113e181876112c8565b905082810360608401526113f6818587611339565b9a9950505050505050505050565b6001600160a01b038316815260406020820181905260009061142890830184611072565b949350505050565b634e487b7160e01b600052603260045260246000fd5b60008235603e1983360301811261145c57600080fd5b9190910192915050565b60006020828403121561147857600080fd5b8135610ee5816110cb565b6000808335601e1984360301811261149a57600080fd5b83018035915067ffffffffffffffff8211156114b557600080fd5b60200191503681900382131561070d57600080fd5b60208152600061142860208301848661129f565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161151c5761151c6114f4565b5060010190565b818103818111156103bd576103bd6114f456fef88ce1fdb7fb1cbd3282e49729100fa3f2d6ee9f797961fe4fb1871cea89ea04a2646970667358221220336d7fa98351cdebef62bd0de52cf0116bb4bf38b9131ddd8fe24c26d777c29f64736f6c63430008170033";

type BootstrapUtilConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BootstrapUtilConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BootstrapUtil__factory extends ContractFactory {
  constructor(...args: BootstrapUtilConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BootstrapUtil> {
    return super.deploy(overrides || {}) as Promise<BootstrapUtil>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BootstrapUtil {
    return super.attach(address) as BootstrapUtil;
  }
  override connect(signer: Signer): BootstrapUtil__factory {
    return super.connect(signer) as BootstrapUtil__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BootstrapUtilInterface {
    return new utils.Interface(_abi) as BootstrapUtilInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BootstrapUtil {
    return new Contract(address, _abi, signerOrProvider) as BootstrapUtil;
  }
}
