/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ErrorsLib,
  ErrorsLibInterface,
} from "../../../../src/modular-etherspot-wallet/libraries/ErrorsLib";

const _abi = [
  {
    inputs: [],
    name: "AddingInvalidGuardian",
    type: "error",
  },
  {
    inputs: [],
    name: "AddingInvalidOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadySignedProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughGuardians",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyGuardian",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwnerOrGuardianOrSelf",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwnerOrSelf",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposalResolved",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposalTimelocked",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposalUnresolved",
    type: "error",
  },
  {
    inputs: [],
    name: "RemovingInvalidGuardian",
    type: "error",
  },
  {
    inputs: [],
    name: "RemovingInvalidOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "WalletNeedsOwner",
    type: "error",
  },
] as const;

const _bytecode =
  "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122058ddae74ca9b39977a07af668d4e129209eb29a24a1acfc485271c764a5000fc64736f6c63430008170033";

type ErrorsLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ErrorsLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ErrorsLib__factory extends ContractFactory {
  constructor(...args: ErrorsLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ErrorsLib> {
    return super.deploy(overrides || {}) as Promise<ErrorsLib>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ErrorsLib {
    return super.attach(address) as ErrorsLib;
  }
  override connect(signer: Signer): ErrorsLib__factory {
    return super.connect(signer) as ErrorsLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ErrorsLibInterface {
    return new utils.Interface(_abi) as ErrorsLibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ErrorsLib {
    return new Contract(address, _abi, signerOrProvider) as ErrorsLib;
  }
}
