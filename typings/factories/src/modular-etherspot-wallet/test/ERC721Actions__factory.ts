/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC721Actions,
  ERC721ActionsInterface,
} from "../../../../src/modular-etherspot-wallet/test/ERC721Actions";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "smartAccount",
        type: "address",
      },
    ],
    name: "AlreadyInitialized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "smartAccount",
        type: "address",
      },
    ],
    name: "NotInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "invalidERC721Action",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mew",
        type: "address",
      },
    ],
    name: "isInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "moduleTypeId",
        type: "uint256",
      },
    ],
    name: "isModuleType",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onInstall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onUninstall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "transferERC721Action",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061027c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630d4d1faf146100675780631888bfd71461007b5780636d61fe70146100905780638a91b0e314610090578063d60b347f146100a2578063ecd05961146100c6575b600080fd5b604051600081526020015b60405180910390f35b61008e61008936600461015d565b6100d4565b005b61008e61009e366004610199565b5050565b6100b66100b036600461020b565b50600090565b6040519015158152602001610072565b6100b66100b036600461022d565b6040516323b872dd60e01b81523360048201526001600160a01b038281166024830152604482018490528416906323b872dd90606401600060405180830381600087803b15801561012457600080fd5b505af1158015610138573d6000803e3d6000fd5b50505050505050565b80356001600160a01b038116811461015857600080fd5b919050565b60008060006060848603121561017257600080fd5b61017b84610141565b92506020840135915061019060408501610141565b90509250925092565b600080602083850312156101ac57600080fd5b823567ffffffffffffffff808211156101c457600080fd5b818501915085601f8301126101d857600080fd5b8135818111156101e757600080fd5b8660208285010111156101f957600080fd5b60209290920196919550909350505050565b60006020828403121561021d57600080fd5b61022682610141565b9392505050565b60006020828403121561023f57600080fd5b503591905056fea264697066735822122021bd32f6631d7baa390bc24de867a38b26d64e0ab03496ba19eea59354dcb55e64736f6c63430008170033";

type ERC721ActionsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721ActionsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Actions__factory extends ContractFactory {
  constructor(...args: ERC721ActionsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Actions> {
    return super.deploy(overrides || {}) as Promise<ERC721Actions>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC721Actions {
    return super.attach(address) as ERC721Actions;
  }
  override connect(signer: Signer): ERC721Actions__factory {
    return super.connect(signer) as ERC721Actions__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721ActionsInterface {
    return new utils.Interface(_abi) as ERC721ActionsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Actions {
    return new Contract(address, _abi, signerOrProvider) as ERC721Actions;
  }
}
