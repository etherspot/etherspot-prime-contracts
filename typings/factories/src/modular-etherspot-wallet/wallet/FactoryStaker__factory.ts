/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  FactoryStaker,
  FactoryStakerInterface,
} from "../../../../src/modular-etherspot-wallet/wallet/FactoryStaker";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "FactoryStaker_InvalidEPAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NewOwnerIsZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NoHandoverRequest",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pendingOwner",
        type: "address",
      },
    ],
    name: "OwnershipHandoverCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pendingOwner",
        type: "address",
      },
    ],
    name: "OwnershipHandoverRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_epAddress",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelOwnershipHandover",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pendingOwner",
        type: "address",
      },
    ],
    name: "completeOwnershipHandover",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "result",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pendingOwner",
        type: "address",
      },
    ],
    name: "ownershipHandoverExpiresAt",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestOwnershipHandover",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_epAddress",
        type: "address",
      },
    ],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_epAddress",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_withdrawTo",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610aef380380610aef83398181016040528101906100329190610190565b6100418161004760201b60201c565b506101bd565b61005561012860201b60201c565b156100d0577fffffffffffffffffffffffffffffffffffffffffffffffffffffffff7487392780541561009057630dc149f06000526004601cfd5b8160601b60601c9150811560ff1b821781558160007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a350610125565b8060601b60601c9050807fffffffffffffffffffffffffffffffffffffffffffffffffffffffff74873927558060007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a35b50565b600090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061015d82610132565b9050919050565b61016d81610152565b811461017857600080fd5b50565b60008151905061018a81610164565b92915050565b6000602082840312156101a6576101a561012d565b5b60006101b48482850161017b565b91505092915050565b610923806101cc6000396000f3fe6080604052600436106100915760003560e01c80638da5cb5b116100595780638da5cb5b146100f9578063b36f970514610124578063f04e283e1461014d578063f2fde38b14610169578063fee81cf41461018557610091565b8063256929621461009657806345171159146100a05780634a1ce599146100bc57806354d1f13d146100e5578063715018a6146100ef575b600080fd5b61009e6101c2565b005b6100ba60048036038101906100b59190610750565b610216565b005b3480156100c857600080fd5b506100e360048036038101906100de9190610790565b6102f4565b005b6100ed6103c5565b005b6100f7610401565b005b34801561010557600080fd5b5061010e610415565b60405161011b91906107cc565b60405180910390f35b34801561013057600080fd5b5061014b60048036038101906101469190610825565b61043e565b005b61016760048036038101906101629190610790565b61051b565b005b610183600480360381019061017e9190610790565b61055c565b005b34801561019157600080fd5b506101ac60048036038101906101a79190610790565b610586565b6040516101b9919061087e565b60405180910390f35b60006101cc6105a1565b67ffffffffffffffff164201905063389a75e1600c5233600052806020600c2055337fdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d600080a250565b61021e6105ac565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610284576040517f2ca18ee000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16630396cb6034836040518363ffffffff1660e01b81526004016102be91906108a8565b6000604051808303818588803b1580156102d757600080fd5b505af11580156102eb573d6000803e3d6000fd5b50505050505050565b6102fc6105ac565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610362576040517f2ca18ee000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156103aa57600080fd5b505af11580156103be573d6000803e3d6000fd5b5050505050565b63389a75e1600c523360005260006020600c2055337ffa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c92600080a2565b6104096105ac565b61041360006105e4565b565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffff7487392754905090565b6104466105ac565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104ac576040517f2ca18ee000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663c23a5cea826040518263ffffffff1660e01b81526004016104e591906108d2565b600060405180830381600087803b1580156104ff57600080fd5b505af1158015610513573d6000803e3d6000fd5b505050505050565b6105236105ac565b63389a75e1600c52806000526020600c20805442111561054b57636f5e88186000526004601cfd5b6000815550610559816105e4565b50565b6105646105ac565b8060601b61057a57637448fbae6000526004601cfd5b610583816105e4565b50565b600063389a75e1600c52816000526020600c20549050919050565b60006202a300905090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739275433146105e2576382b429006000526004601cfd5b565b6105ec6106ac565b15610652577fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739278160601b60601c91508181547f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3811560ff1b82178155506106a9565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739278160601b60601c91508181547f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3818155505b50565b600090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106e1826106b6565b9050919050565b6106f1816106d6565b81146106fc57600080fd5b50565b60008135905061070e816106e8565b92915050565b600063ffffffff82169050919050565b61072d81610714565b811461073857600080fd5b50565b60008135905061074a81610724565b92915050565b60008060408385031215610767576107666106b1565b5b6000610775858286016106ff565b92505060206107868582860161073b565b9150509250929050565b6000602082840312156107a6576107a56106b1565b5b60006107b4848285016106ff565b91505092915050565b6107c6816106d6565b82525050565b60006020820190506107e160008301846107bd565b92915050565b60006107f2826106b6565b9050919050565b610802816107e7565b811461080d57600080fd5b50565b60008135905061081f816107f9565b92915050565b6000806040838503121561083c5761083b6106b1565b5b600061084a858286016106ff565b925050602061085b85828601610810565b9150509250929050565b6000819050919050565b61087881610865565b82525050565b6000602082019050610893600083018461086f565b92915050565b6108a281610714565b82525050565b60006020820190506108bd6000830184610899565b92915050565b6108cc816107e7565b82525050565b60006020820190506108e760008301846108c3565b9291505056fea26469706673582212209555d622678c6b5d7a1d2d1ad2c1fbe2e374469f134923c0d9dae6f517e4f37064736f6c63430008170033";

type FactoryStakerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FactoryStakerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FactoryStaker__factory extends ContractFactory {
  constructor(...args: FactoryStakerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FactoryStaker> {
    return super.deploy(_owner, overrides || {}) as Promise<FactoryStaker>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override attach(address: string): FactoryStaker {
    return super.attach(address) as FactoryStaker;
  }
  override connect(signer: Signer): FactoryStaker__factory {
    return super.connect(signer) as FactoryStaker__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FactoryStakerInterface {
    return new utils.Interface(_abi) as FactoryStakerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FactoryStaker {
    return new Contract(address, _abi, signerOrProvider) as FactoryStaker;
  }
}
