/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ModuleIsolationHook,
  ModuleIsolationHookInterface,
} from "../../../../../src/modular-etherspot-wallet/modules/hooks/ModuleIsolationHook";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "smartAccount",
        type: "address",
      },
    ],
    name: "AlreadyInitialized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "smartAccount",
        type: "address",
      },
    ],
    name: "NotInitialized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "target",
        type: "bytes4",
      },
      {
        internalType: "bytes4[]",
        name: "list",
        type: "bytes4[]",
      },
    ],
    name: "contains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "installed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "CallType",
        name: "callType",
        type: "bytes1",
      },
      {
        internalType: "bytes",
        name: "executionCallData",
        type: "bytes",
      },
    ],
    name: "integrityCheck",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "smartAccount",
        type: "address",
      },
    ],
    name: "isInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "typeID",
        type: "uint256",
      },
    ],
    name: "isModuleType",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onInstall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onUninstall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "hookData",
        type: "bytes",
      },
    ],
    name: "postCheck",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "msgData",
        type: "bytes",
      },
    ],
    name: "preCheck",
    outputs: [
      {
        internalType: "bytes",
        name: "hookData",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611793806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80636d61fe70116100665780636d61fe70146101445780638a91b0e314610160578063d60b347f1461017c578063ecd05961146101ac578063f02900bf146101dc57610093565b8063173bf7da1461009857806320af8e9a146100c857806322014d9b146100f857806364a2097c14610128575b600080fd5b6100b260048036038101906100ad9190610f14565b61020c565b6040516100bf9190610f7c565b60405180910390f35b6100e260048036038101906100dd9190610ff5565b610214565b6040516100ef91906110e5565b60405180910390f35b610112600480360381019061010d919061129d565b6102f4565b60405161011f9190610f7c565b60405180910390f35b610142600480360381019061013d9190611351565b610383565b005b61015e60048036038101906101599190610f14565b610c69565b005b61017a60048036038101906101759190610f14565b610cc4565b005b610196600480360381019061019191906113b1565b610d1f565b6040516101a39190610f7c565b60405180910390f35b6101c660048036038101906101c19190611414565b610d74565b6040516101d39190610f7c565b60405180910390f35b6101f660048036038101906101f191906113b1565b610d81565b6040516102039190610f7c565b60405180910390f35b600092915050565b60606000838360009060049261022c9392919061144b565b90610237919061149e565b905063d691c96460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036102da576000848460049060249261029b9392919061144b565b906102a69190611507565b90506000806102b483610da1565b5050915091506102d682888860649080926102d19392919061144b565b610383565b5050505b604051806020016040528060008152509150509392505050565b6000805b82518110156103775782818151811061031457610313611566565b5b60200260200101517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361036a57600191505061037d565b80806001019150506102f8565b50600090505b92915050565b6000600567ffffffffffffffff8111156103a05761039f61115f565b5b6040519080825280602002602001820160405280156103ce5781602001602082028036833780820191505090505b50905063e9ae5c5360e01b816000815181106103ed576103ec611566565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152505063d691c96460e01b8160018151811061045557610454611566565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250506372aea65460e01b816002815181106104bd576104bc611566565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525050639517e29f60e01b8160038151811061052557610524611566565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152505063a71763a860e01b8160048151811061058d5761058c611566565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250506105e784600160f81b610dc3565b156108a3573660006105f98585610e14565b9150915060005b8282905081101561089b576000601884848481811061062257610621611566565b5b905060200281019061063491906115a4565b806040019061064391906115cc565b600381811061065557610654611566565b5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c60108585858181106106b7576106b6611566565b5b90506020028101906106c991906115a4565b80604001906106d891906115cc565b60028181106106ea576106e9611566565b5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c600886868681811061074c5761074b611566565b5b905060200281019061075e91906115a4565b806040019061076d91906115cc565b600181811061077f5761077e611566565b5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c8686868181106107df576107de611566565b5b90506020028101906107f191906115a4565b806040019061080091906115cc565b600081811061081257610811611566565b5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916171717905061084d81866102f4565b1561088d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610884906116b2565b60405180910390fd5b508080600101915050610600565b505050610c63565b6108b184600060f81b610dc3565b15610a92576000803660006108c68787610e2d565b935093509350935060006018838360038181106108e6576108e5611566565b5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c60108484600281811061094957610948611566565b5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c6008858560018181106109ac576109ab611566565b5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c85856000818110610a0d57610a0c611566565b5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161717179050610a4881876102f4565b15610a88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7f906116b2565b60405180910390fd5b5050505050610c62565b610aa08460ff60f81b610dc3565b15610c61576000601884846003818110610abd57610abc611566565b5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c601085856002818110610b2057610b1f611566565b5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c600886866001818110610b8357610b82611566565b5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c86866000818110610be457610be3611566565b5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161717179050610c1f81836102f4565b15610c5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c56906116b2565b60405180910390fd5b505b5b5b50505050565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000816004149050919050565b60006020528060005260406000206000915054906101000a900460ff1681565b6000806000808493508460081b92508460301b91508460501b90509193509193565b6000817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916837effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614905092915050565b3660008335840160208101925080359150509250929050565b6000803660008585600090601492610e479392919061144b565b90610e5291906116fe565b60601c93508585601490603492610e6b9392919061144b565b90610e769190611507565b60001c925085856034908092610e8e9392919061144b565b9150915092959194509250565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112610ed457610ed3610eaf565b5b8235905067ffffffffffffffff811115610ef157610ef0610eb4565b5b602083019150836001820283011115610f0d57610f0c610eb9565b5b9250929050565b60008060208385031215610f2b57610f2a610ea5565b5b600083013567ffffffffffffffff811115610f4957610f48610eaa565b5b610f5585828601610ebe565b92509250509250929050565b60008115159050919050565b610f7681610f61565b82525050565b6000602082019050610f916000830184610f6d565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fc282610f97565b9050919050565b610fd281610fb7565b8114610fdd57600080fd5b50565b600081359050610fef81610fc9565b92915050565b60008060006040848603121561100e5761100d610ea5565b5b600061101c86828701610fe0565b935050602084013567ffffffffffffffff81111561103d5761103c610eaa565b5b61104986828701610ebe565b92509250509250925092565b600081519050919050565b600082825260208201905092915050565b60005b8381101561108f578082015181840152602081019050611074565b60008484015250505050565b6000601f19601f8301169050919050565b60006110b782611055565b6110c18185611060565b93506110d1818560208601611071565b6110da8161109b565b840191505092915050565b600060208201905081810360008301526110ff81846110ac565b905092915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61113c81611107565b811461114757600080fd5b50565b60008135905061115981611133565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6111978261109b565b810181811067ffffffffffffffff821117156111b6576111b561115f565b5b80604052505050565b60006111c9610e9b565b90506111d5828261118e565b919050565b600067ffffffffffffffff8211156111f5576111f461115f565b5b602082029050602081019050919050565b6000611219611214846111da565b6111bf565b9050808382526020820190506020840283018581111561123c5761123b610eb9565b5b835b818110156112655780611251888261114a565b84526020840193505060208101905061123e565b5050509392505050565b600082601f83011261128457611283610eaf565b5b8135611294848260208601611206565b91505092915050565b600080604083850312156112b4576112b3610ea5565b5b60006112c28582860161114a565b925050602083013567ffffffffffffffff8111156112e3576112e2610eaa565b5b6112ef8582860161126f565b9150509250929050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b61132e816112f9565b811461133957600080fd5b50565b60008135905061134b81611325565b92915050565b60008060006040848603121561136a57611369610ea5565b5b60006113788682870161133c565b935050602084013567ffffffffffffffff81111561139957611398610eaa565b5b6113a586828701610ebe565b92509250509250925092565b6000602082840312156113c7576113c6610ea5565b5b60006113d584828501610fe0565b91505092915050565b6000819050919050565b6113f1816113de565b81146113fc57600080fd5b50565b60008135905061140e816113e8565b92915050565b60006020828403121561142a57611429610ea5565b5b6000611438848285016113ff565b91505092915050565b600080fd5b600080fd5b6000808585111561145f5761145e611441565b5b838611156114705761146f611446565b5b6001850283019150848603905094509492505050565b600082905092915050565b600082821b905092915050565b60006114aa8383611486565b826114b58135611107565b925060048210156114f5576114f07fffffffff0000000000000000000000000000000000000000000000000000000083600403600802611491565b831692505b505092915050565b6000819050919050565b60006115138383611486565b8261151e81356114fd565b9250602082101561155e576115597fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83602003600802611491565b831692505b505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b6000823560016060038336030381126115c0576115bf611595565b5b80830191505092915050565b600080833560016020038436030381126115e9576115e8611595565b5b80840192508235915067ffffffffffffffff82111561160b5761160a61159a565b5b6020830192506001820236038313156116275761162661159f565b5b509250929050565b600082825260208201905092915050565b7f4d45573a3a4d6f64756c6549736f6c6174696f6e486f6f6b3a42616e6e65645360008201527f69676e6174757265000000000000000000000000000000000000000000000000602082015250565b600061169c60288361162f565b91506116a782611640565b604082019050919050565b600060208201905081810360008301526116cb8161168f565b9050919050565b60007fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b600061170a8383611486565b8261171581356116d2565b92506014821015611755576117507fffffffffffffffffffffffffffffffffffffffff00000000000000000000000083601403600802611491565b831692505b50509291505056fea2646970667358221220950708b4aa531214e57057be3b2f2f7b3d987b51c02d741d02a35000be2fa97f64736f6c63430008170033";

type ModuleIsolationHookConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ModuleIsolationHookConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ModuleIsolationHook__factory extends ContractFactory {
  constructor(...args: ModuleIsolationHookConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ModuleIsolationHook> {
    return super.deploy(overrides || {}) as Promise<ModuleIsolationHook>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ModuleIsolationHook {
    return super.attach(address) as ModuleIsolationHook;
  }
  override connect(signer: Signer): ModuleIsolationHook__factory {
    return super.connect(signer) as ModuleIsolationHook__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ModuleIsolationHookInterface {
    return new utils.Interface(_abi) as ModuleIsolationHookInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ModuleIsolationHook {
    return new Contract(address, _abi, signerOrProvider) as ModuleIsolationHook;
  }
}
