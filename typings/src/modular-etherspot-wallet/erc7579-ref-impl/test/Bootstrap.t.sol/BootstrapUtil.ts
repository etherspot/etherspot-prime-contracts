/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../../../common";

export type BootstrapConfigStruct = {
  module: PromiseOrValue<string>;
  data: PromiseOrValue<BytesLike>;
};

export type BootstrapConfigStructOutput = [string, string] & {
  module: string;
  data: string;
};

export interface BootstrapUtilInterface extends utils.Interface {
  functions: {
    "_makeBootstrapConfig(address,bytes)": FunctionFragment;
    "makeBootstrapConfig(address[],bytes[])": FunctionFragment;
    "makeBootstrapConfig(address,bytes)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "_makeBootstrapConfig"
      | "makeBootstrapConfig(address[],bytes[])"
      | "makeBootstrapConfig(address,bytes)"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "_makeBootstrapConfig",
    values: [PromiseOrValue<string>, PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "makeBootstrapConfig(address[],bytes[])",
    values: [PromiseOrValue<string>[], PromiseOrValue<BytesLike>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "makeBootstrapConfig(address,bytes)",
    values: [PromiseOrValue<string>, PromiseOrValue<BytesLike>]
  ): string;

  decodeFunctionResult(
    functionFragment: "_makeBootstrapConfig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "makeBootstrapConfig(address[],bytes[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "makeBootstrapConfig(address,bytes)",
    data: BytesLike
  ): Result;

  events: {};
}

export interface BootstrapUtil extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: BootstrapUtilInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    _makeBootstrapConfig(
      module: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<
      [BootstrapConfigStructOutput] & { config: BootstrapConfigStructOutput }
    >;

    "makeBootstrapConfig(address[],bytes[])"(
      modules: PromiseOrValue<string>[],
      datas: PromiseOrValue<BytesLike>[],
      overrides?: CallOverrides
    ): Promise<
      [BootstrapConfigStructOutput[]] & {
        configs: BootstrapConfigStructOutput[];
      }
    >;

    "makeBootstrapConfig(address,bytes)"(
      module: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<
      [BootstrapConfigStructOutput[]] & {
        config: BootstrapConfigStructOutput[];
      }
    >;
  };

  _makeBootstrapConfig(
    module: PromiseOrValue<string>,
    data: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<BootstrapConfigStructOutput>;

  "makeBootstrapConfig(address[],bytes[])"(
    modules: PromiseOrValue<string>[],
    datas: PromiseOrValue<BytesLike>[],
    overrides?: CallOverrides
  ): Promise<BootstrapConfigStructOutput[]>;

  "makeBootstrapConfig(address,bytes)"(
    module: PromiseOrValue<string>,
    data: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<BootstrapConfigStructOutput[]>;

  callStatic: {
    _makeBootstrapConfig(
      module: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BootstrapConfigStructOutput>;

    "makeBootstrapConfig(address[],bytes[])"(
      modules: PromiseOrValue<string>[],
      datas: PromiseOrValue<BytesLike>[],
      overrides?: CallOverrides
    ): Promise<BootstrapConfigStructOutput[]>;

    "makeBootstrapConfig(address,bytes)"(
      module: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BootstrapConfigStructOutput[]>;
  };

  filters: {};

  estimateGas: {
    _makeBootstrapConfig(
      module: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "makeBootstrapConfig(address[],bytes[])"(
      modules: PromiseOrValue<string>[],
      datas: PromiseOrValue<BytesLike>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "makeBootstrapConfig(address,bytes)"(
      module: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    _makeBootstrapConfig(
      module: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "makeBootstrapConfig(address[],bytes[])"(
      modules: PromiseOrValue<string>[],
      datas: PromiseOrValue<BytesLike>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "makeBootstrapConfig(address,bytes)"(
      module: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
