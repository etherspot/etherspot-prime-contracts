/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../common";

export type ManifestExecutionFunctionStruct = {
  selector: PromiseOrValue<BytesLike>;
  permissions: PromiseOrValue<string>[];
};

export type ManifestExecutionFunctionStructOutput = [string, string[]] & {
  selector: string;
  permissions: string[];
};

export type ManifestExternalCallPermissionStruct = {
  externalAddress: PromiseOrValue<string>;
  permitAnySelector: PromiseOrValue<boolean>;
  selectors: PromiseOrValue<BytesLike>[];
};

export type ManifestExternalCallPermissionStructOutput = [
  string,
  boolean,
  string[]
] & {
  externalAddress: string;
  permitAnySelector: boolean;
  selectors: string[];
};

export type ManifestFunctionStruct = {
  functionType: PromiseOrValue<BigNumberish>;
  functionId: PromiseOrValue<BigNumberish>;
  dependencyIndex: PromiseOrValue<BigNumberish>;
};

export type ManifestFunctionStructOutput = [number, number, BigNumber] & {
  functionType: number;
  functionId: number;
  dependencyIndex: BigNumber;
};

export type ManifestAssociatedFunctionStruct = {
  executionSelector: PromiseOrValue<BytesLike>;
  associatedFunction: ManifestFunctionStruct;
};

export type ManifestAssociatedFunctionStructOutput = [
  string,
  ManifestFunctionStructOutput
] & {
  executionSelector: string;
  associatedFunction: ManifestFunctionStructOutput;
};

export type ManifestExecutionHookStruct = {
  executionSelector: PromiseOrValue<BytesLike>;
  preExecHook: ManifestFunctionStruct;
  postExecHook: ManifestFunctionStruct;
};

export type ManifestExecutionHookStructOutput = [
  string,
  ManifestFunctionStructOutput,
  ManifestFunctionStructOutput
] & {
  executionSelector: string;
  preExecHook: ManifestFunctionStructOutput;
  postExecHook: ManifestFunctionStructOutput;
};

export type PluginManifestStruct = {
  name: PromiseOrValue<string>;
  version: PromiseOrValue<string>;
  author: PromiseOrValue<string>;
  interfaceIds: PromiseOrValue<BytesLike>[];
  dependencyInterfaceIds: PromiseOrValue<BytesLike>[];
  executionFunctions: ManifestExecutionFunctionStruct[];
  permittedExecutionSelectors: PromiseOrValue<BytesLike>[];
  permitAnyExternalContract: PromiseOrValue<boolean>;
  permittedExternalCalls: ManifestExternalCallPermissionStruct[];
  userOpValidationFunctions: ManifestAssociatedFunctionStruct[];
  runtimeValidationFunctions: ManifestAssociatedFunctionStruct[];
  preUserOpValidationHooks: ManifestAssociatedFunctionStruct[];
  preRuntimeValidationHooks: ManifestAssociatedFunctionStruct[];
  executionHooks: ManifestExecutionHookStruct[];
  permittedCallHooks: ManifestExecutionHookStruct[];
};

export type PluginManifestStructOutput = [
  string,
  string,
  string,
  string[],
  string[],
  ManifestExecutionFunctionStructOutput[],
  string[],
  boolean,
  ManifestExternalCallPermissionStructOutput[],
  ManifestAssociatedFunctionStructOutput[],
  ManifestAssociatedFunctionStructOutput[],
  ManifestAssociatedFunctionStructOutput[],
  ManifestAssociatedFunctionStructOutput[],
  ManifestExecutionHookStructOutput[],
  ManifestExecutionHookStructOutput[]
] & {
  name: string;
  version: string;
  author: string;
  interfaceIds: string[];
  dependencyInterfaceIds: string[];
  executionFunctions: ManifestExecutionFunctionStructOutput[];
  permittedExecutionSelectors: string[];
  permitAnyExternalContract: boolean;
  permittedExternalCalls: ManifestExternalCallPermissionStructOutput[];
  userOpValidationFunctions: ManifestAssociatedFunctionStructOutput[];
  runtimeValidationFunctions: ManifestAssociatedFunctionStructOutput[];
  preUserOpValidationHooks: ManifestAssociatedFunctionStructOutput[];
  preRuntimeValidationHooks: ManifestAssociatedFunctionStructOutput[];
  executionHooks: ManifestExecutionHookStructOutput[];
  permittedCallHooks: ManifestExecutionHookStructOutput[];
};

export type UserOperationStruct = {
  sender: PromiseOrValue<string>;
  nonce: PromiseOrValue<BigNumberish>;
  initCode: PromiseOrValue<BytesLike>;
  callData: PromiseOrValue<BytesLike>;
  callGasLimit: PromiseOrValue<BigNumberish>;
  verificationGasLimit: PromiseOrValue<BigNumberish>;
  preVerificationGas: PromiseOrValue<BigNumberish>;
  maxFeePerGas: PromiseOrValue<BigNumberish>;
  maxPriorityFeePerGas: PromiseOrValue<BigNumberish>;
  paymasterAndData: PromiseOrValue<BytesLike>;
  signature: PromiseOrValue<BytesLike>;
};

export type UserOperationStructOutput = [
  string,
  BigNumber,
  string,
  string,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  string,
  string
] & {
  sender: string;
  nonce: BigNumber;
  initCode: string;
  callData: string;
  callGasLimit: BigNumber;
  verificationGasLimit: BigNumber;
  preVerificationGas: BigNumber;
  maxFeePerGas: BigNumber;
  maxPriorityFeePerGas: BigNumber;
  paymasterAndData: string;
  signature: string;
};

export declare namespace IPluginManager {
  export type InjectedHooksInfoStruct = {
    preExecHookFunctionId: PromiseOrValue<BigNumberish>;
    isPostHookUsed: PromiseOrValue<boolean>;
    postExecHookFunctionId: PromiseOrValue<BigNumberish>;
  };

  export type InjectedHooksInfoStructOutput = [number, boolean, number] & {
    preExecHookFunctionId: number;
    isPostHookUsed: boolean;
    postExecHookFunctionId: number;
  };
}

export interface GuardianPluginInterface extends utils.Interface {
  functions: {
    "AUTHOR()": FunctionFragment;
    "NAME()": FunctionFragment;
    "VERSION()": FunctionFragment;
    "addGuardian(address)": FunctionFragment;
    "changeProposalTimelock(uint256)": FunctionFragment;
    "discardCurrentProposal(address)": FunctionFragment;
    "getAccountCurrentProposalId(address)": FunctionFragment;
    "getAccountGuardianCount(address)": FunctionFragment;
    "getAccountProposalTimelock(address)": FunctionFragment;
    "getOwnersForAccount(address)": FunctionFragment;
    "getProposal(address,uint256)": FunctionFragment;
    "guardianCosign(address)": FunctionFragment;
    "guardianPropose(address,address)": FunctionFragment;
    "isGuardian(address)": FunctionFragment;
    "isGuardianOfAccount(address,address)": FunctionFragment;
    "multiOwnerPlugin()": FunctionFragment;
    "onHookApply(address,(uint8,bool,uint8),bytes)": FunctionFragment;
    "onHookUnapply(address,(uint8,bool,uint8),bytes)": FunctionFragment;
    "onInstall(bytes)": FunctionFragment;
    "onUninstall(bytes)": FunctionFragment;
    "pluginManifest()": FunctionFragment;
    "postExecutionHook(uint8,bytes)": FunctionFragment;
    "preExecutionHook(uint8,address,uint256,bytes)": FunctionFragment;
    "preRuntimeValidationHook(uint8,address,uint256,bytes)": FunctionFragment;
    "preUserOpValidationHook(uint8,(address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32)": FunctionFragment;
    "removeGuardian(address)": FunctionFragment;
    "runtimeValidationFunction(uint8,address,uint256,bytes)": FunctionFragment;
    "supportsInterface(bytes4)": FunctionFragment;
    "userOpValidationFunction(uint8,(address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "AUTHOR"
      | "NAME"
      | "VERSION"
      | "addGuardian"
      | "changeProposalTimelock"
      | "discardCurrentProposal"
      | "getAccountCurrentProposalId"
      | "getAccountGuardianCount"
      | "getAccountProposalTimelock"
      | "getOwnersForAccount"
      | "getProposal"
      | "guardianCosign"
      | "guardianPropose"
      | "isGuardian"
      | "isGuardianOfAccount"
      | "multiOwnerPlugin"
      | "onHookApply"
      | "onHookUnapply"
      | "onInstall"
      | "onUninstall"
      | "pluginManifest"
      | "postExecutionHook"
      | "preExecutionHook"
      | "preRuntimeValidationHook"
      | "preUserOpValidationHook"
      | "removeGuardian"
      | "runtimeValidationFunction"
      | "supportsInterface"
      | "userOpValidationFunction"
  ): FunctionFragment;

  encodeFunctionData(functionFragment: "AUTHOR", values?: undefined): string;
  encodeFunctionData(functionFragment: "NAME", values?: undefined): string;
  encodeFunctionData(functionFragment: "VERSION", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "addGuardian",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "changeProposalTimelock",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "discardCurrentProposal",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getAccountCurrentProposalId",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getAccountGuardianCount",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getAccountProposalTimelock",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getOwnersForAccount",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getProposal",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "guardianCosign",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "guardianPropose",
    values: [PromiseOrValue<string>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "isGuardian",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "isGuardianOfAccount",
    values: [PromiseOrValue<string>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "multiOwnerPlugin",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "onHookApply",
    values: [
      PromiseOrValue<string>,
      IPluginManager.InjectedHooksInfoStruct,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "onHookUnapply",
    values: [
      PromiseOrValue<string>,
      IPluginManager.InjectedHooksInfoStruct,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "onInstall",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "onUninstall",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "pluginManifest",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "postExecutionHook",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "preExecutionHook",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "preRuntimeValidationHook",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "preUserOpValidationHook",
    values: [
      PromiseOrValue<BigNumberish>,
      UserOperationStruct,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "removeGuardian",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "runtimeValidationFunction",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "supportsInterface",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "userOpValidationFunction",
    values: [
      PromiseOrValue<BigNumberish>,
      UserOperationStruct,
      PromiseOrValue<BytesLike>
    ]
  ): string;

  decodeFunctionResult(functionFragment: "AUTHOR", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "NAME", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "VERSION", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "addGuardian",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "changeProposalTimelock",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "discardCurrentProposal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAccountCurrentProposalId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAccountGuardianCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAccountProposalTimelock",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getOwnersForAccount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getProposal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "guardianCosign",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "guardianPropose",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "isGuardian", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isGuardianOfAccount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "multiOwnerPlugin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onHookApply",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onHookUnapply",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "onInstall", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "onUninstall",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "pluginManifest",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "postExecutionHook",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "preExecutionHook",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "preRuntimeValidationHook",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "preUserOpValidationHook",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeGuardian",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "runtimeValidationFunction",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "userOpValidationFunction",
    data: BytesLike
  ): Result;

  events: {
    "GuardianAdded(address,address)": EventFragment;
    "GuardianProposalSubmitted(address,uint256,address)": EventFragment;
    "GuardianRemoved(address,address)": EventFragment;
    "ProposalDiscarded(address,uint256)": EventFragment;
    "ProposalTimelockChanged(address,uint256)": EventFragment;
    "QuorumNotReached(address,uint256,address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "GuardianAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "GuardianProposalSubmitted"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "GuardianRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ProposalDiscarded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ProposalTimelockChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "QuorumNotReached"): EventFragment;
}

export interface GuardianAddedEventObject {
  account: string;
  guardianAdded: string;
}
export type GuardianAddedEvent = TypedEvent<
  [string, string],
  GuardianAddedEventObject
>;

export type GuardianAddedEventFilter = TypedEventFilter<GuardianAddedEvent>;

export interface GuardianProposalSubmittedEventObject {
  account: string;
  proposalId: BigNumber;
  newOwnerProposed: string;
}
export type GuardianProposalSubmittedEvent = TypedEvent<
  [string, BigNumber, string],
  GuardianProposalSubmittedEventObject
>;

export type GuardianProposalSubmittedEventFilter =
  TypedEventFilter<GuardianProposalSubmittedEvent>;

export interface GuardianRemovedEventObject {
  account: string;
  removedGuardian: string;
}
export type GuardianRemovedEvent = TypedEvent<
  [string, string],
  GuardianRemovedEventObject
>;

export type GuardianRemovedEventFilter = TypedEventFilter<GuardianRemovedEvent>;

export interface ProposalDiscardedEventObject {
  account: string;
  proposalId: BigNumber;
}
export type ProposalDiscardedEvent = TypedEvent<
  [string, BigNumber],
  ProposalDiscardedEventObject
>;

export type ProposalDiscardedEventFilter =
  TypedEventFilter<ProposalDiscardedEvent>;

export interface ProposalTimelockChangedEventObject {
  account: string;
  newProposalTimelock: BigNumber;
}
export type ProposalTimelockChangedEvent = TypedEvent<
  [string, BigNumber],
  ProposalTimelockChangedEventObject
>;

export type ProposalTimelockChangedEventFilter =
  TypedEventFilter<ProposalTimelockChangedEvent>;

export interface QuorumNotReachedEventObject {
  account: string;
  proposalId: BigNumber;
  newOwnerProposed: string;
  approvalCount: BigNumber;
}
export type QuorumNotReachedEvent = TypedEvent<
  [string, BigNumber, string, BigNumber],
  QuorumNotReachedEventObject
>;

export type QuorumNotReachedEventFilter =
  TypedEventFilter<QuorumNotReachedEvent>;

export interface GuardianPlugin extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: GuardianPluginInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    AUTHOR(overrides?: CallOverrides): Promise<[string]>;

    NAME(overrides?: CallOverrides): Promise<[string]>;

    VERSION(overrides?: CallOverrides): Promise<[string]>;

    addGuardian(
      _newGuardian: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    changeProposalTimelock(
      _newTimelock: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    discardCurrentProposal(
      _account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    getAccountCurrentProposalId(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getAccountGuardianCount(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getAccountProposalTimelock(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getOwnersForAccount(
      _account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    getProposal(
      _account: PromiseOrValue<string>,
      _proposalId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [string, boolean, BigNumber, string[], BigNumber] & {
        newOwnerProposed: string;
        resolved: boolean;
        approvalCount: BigNumber;
        guardiansApproved: string[];
        proposedAt: BigNumber;
      }
    >;

    guardianCosign(
      _account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    guardianPropose(
      _account: PromiseOrValue<string>,
      _newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    isGuardian(
      _guardian: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isGuardianOfAccount(
      _account: PromiseOrValue<string>,
      _guardian: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    multiOwnerPlugin(overrides?: CallOverrides): Promise<[string]>;

    onHookApply(
      pluginAppliedOn: PromiseOrValue<string>,
      injectedHooksInfo: IPluginManager.InjectedHooksInfoStruct,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    onHookUnapply(
      pluginAppliedOn: PromiseOrValue<string>,
      injectedHooksInfo: IPluginManager.InjectedHooksInfoStruct,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    onInstall(
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    onUninstall(
      arg0: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    pluginManifest(
      overrides?: CallOverrides
    ): Promise<[PluginManifestStructOutput]>;

    postExecutionHook(
      functionId: PromiseOrValue<BigNumberish>,
      preExecHookData: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    preExecutionHook(
      functionId: PromiseOrValue<BigNumberish>,
      sender: PromiseOrValue<string>,
      value: PromiseOrValue<BigNumberish>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    preRuntimeValidationHook(
      functionId: PromiseOrValue<BigNumberish>,
      sender: PromiseOrValue<string>,
      value: PromiseOrValue<BigNumberish>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    preUserOpValidationHook(
      functionId: PromiseOrValue<BigNumberish>,
      userOp: UserOperationStruct,
      userOpHash: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    removeGuardian(
      _guardian: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    runtimeValidationFunction(
      functionId: PromiseOrValue<BigNumberish>,
      sender: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>,
      arg3: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[void]>;

    supportsInterface(
      interfaceId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    userOpValidationFunction(
      functionId: PromiseOrValue<BigNumberish>,
      userOp: UserOperationStruct,
      userOpHash: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  AUTHOR(overrides?: CallOverrides): Promise<string>;

  NAME(overrides?: CallOverrides): Promise<string>;

  VERSION(overrides?: CallOverrides): Promise<string>;

  addGuardian(
    _newGuardian: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  changeProposalTimelock(
    _newTimelock: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  discardCurrentProposal(
    _account: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  getAccountCurrentProposalId(
    _account: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getAccountGuardianCount(
    _account: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getAccountProposalTimelock(
    _account: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getOwnersForAccount(
    _account: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  getProposal(
    _account: PromiseOrValue<string>,
    _proposalId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<
    [string, boolean, BigNumber, string[], BigNumber] & {
      newOwnerProposed: string;
      resolved: boolean;
      approvalCount: BigNumber;
      guardiansApproved: string[];
      proposedAt: BigNumber;
    }
  >;

  guardianCosign(
    _account: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  guardianPropose(
    _account: PromiseOrValue<string>,
    _newOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  isGuardian(
    _guardian: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isGuardianOfAccount(
    _account: PromiseOrValue<string>,
    _guardian: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  multiOwnerPlugin(overrides?: CallOverrides): Promise<string>;

  onHookApply(
    pluginAppliedOn: PromiseOrValue<string>,
    injectedHooksInfo: IPluginManager.InjectedHooksInfoStruct,
    data: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  onHookUnapply(
    pluginAppliedOn: PromiseOrValue<string>,
    injectedHooksInfo: IPluginManager.InjectedHooksInfoStruct,
    data: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  onInstall(
    data: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  onUninstall(
    arg0: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  pluginManifest(
    overrides?: CallOverrides
  ): Promise<PluginManifestStructOutput>;

  postExecutionHook(
    functionId: PromiseOrValue<BigNumberish>,
    preExecHookData: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  preExecutionHook(
    functionId: PromiseOrValue<BigNumberish>,
    sender: PromiseOrValue<string>,
    value: PromiseOrValue<BigNumberish>,
    data: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  preRuntimeValidationHook(
    functionId: PromiseOrValue<BigNumberish>,
    sender: PromiseOrValue<string>,
    value: PromiseOrValue<BigNumberish>,
    data: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  preUserOpValidationHook(
    functionId: PromiseOrValue<BigNumberish>,
    userOp: UserOperationStruct,
    userOpHash: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  removeGuardian(
    _guardian: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  runtimeValidationFunction(
    functionId: PromiseOrValue<BigNumberish>,
    sender: PromiseOrValue<string>,
    arg2: PromiseOrValue<BigNumberish>,
    arg3: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<void>;

  supportsInterface(
    interfaceId: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  userOpValidationFunction(
    functionId: PromiseOrValue<BigNumberish>,
    userOp: UserOperationStruct,
    userOpHash: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    AUTHOR(overrides?: CallOverrides): Promise<string>;

    NAME(overrides?: CallOverrides): Promise<string>;

    VERSION(overrides?: CallOverrides): Promise<string>;

    addGuardian(
      _newGuardian: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    changeProposalTimelock(
      _newTimelock: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    discardCurrentProposal(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    getAccountCurrentProposalId(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAccountGuardianCount(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAccountProposalTimelock(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getOwnersForAccount(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string[]>;

    getProposal(
      _account: PromiseOrValue<string>,
      _proposalId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [string, boolean, BigNumber, string[], BigNumber] & {
        newOwnerProposed: string;
        resolved: boolean;
        approvalCount: BigNumber;
        guardiansApproved: string[];
        proposedAt: BigNumber;
      }
    >;

    guardianCosign(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    guardianPropose(
      _account: PromiseOrValue<string>,
      _newOwner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    isGuardian(
      _guardian: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isGuardianOfAccount(
      _account: PromiseOrValue<string>,
      _guardian: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    multiOwnerPlugin(overrides?: CallOverrides): Promise<string>;

    onHookApply(
      pluginAppliedOn: PromiseOrValue<string>,
      injectedHooksInfo: IPluginManager.InjectedHooksInfoStruct,
      data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    onHookUnapply(
      pluginAppliedOn: PromiseOrValue<string>,
      injectedHooksInfo: IPluginManager.InjectedHooksInfoStruct,
      data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    onInstall(
      data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    onUninstall(
      arg0: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    pluginManifest(
      overrides?: CallOverrides
    ): Promise<PluginManifestStructOutput>;

    postExecutionHook(
      functionId: PromiseOrValue<BigNumberish>,
      preExecHookData: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    preExecutionHook(
      functionId: PromiseOrValue<BigNumberish>,
      sender: PromiseOrValue<string>,
      value: PromiseOrValue<BigNumberish>,
      data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string>;

    preRuntimeValidationHook(
      functionId: PromiseOrValue<BigNumberish>,
      sender: PromiseOrValue<string>,
      value: PromiseOrValue<BigNumberish>,
      data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    preUserOpValidationHook(
      functionId: PromiseOrValue<BigNumberish>,
      userOp: UserOperationStruct,
      userOpHash: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    removeGuardian(
      _guardian: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    runtimeValidationFunction(
      functionId: PromiseOrValue<BigNumberish>,
      sender: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>,
      arg3: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    supportsInterface(
      interfaceId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    userOpValidationFunction(
      functionId: PromiseOrValue<BigNumberish>,
      userOp: UserOperationStruct,
      userOpHash: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  filters: {
    "GuardianAdded(address,address)"(
      account?: null,
      guardianAdded?: null
    ): GuardianAddedEventFilter;
    GuardianAdded(
      account?: null,
      guardianAdded?: null
    ): GuardianAddedEventFilter;

    "GuardianProposalSubmitted(address,uint256,address)"(
      account?: null,
      proposalId?: null,
      newOwnerProposed?: null
    ): GuardianProposalSubmittedEventFilter;
    GuardianProposalSubmitted(
      account?: null,
      proposalId?: null,
      newOwnerProposed?: null
    ): GuardianProposalSubmittedEventFilter;

    "GuardianRemoved(address,address)"(
      account?: null,
      removedGuardian?: null
    ): GuardianRemovedEventFilter;
    GuardianRemoved(
      account?: null,
      removedGuardian?: null
    ): GuardianRemovedEventFilter;

    "ProposalDiscarded(address,uint256)"(
      account?: null,
      proposalId?: null
    ): ProposalDiscardedEventFilter;
    ProposalDiscarded(
      account?: null,
      proposalId?: null
    ): ProposalDiscardedEventFilter;

    "ProposalTimelockChanged(address,uint256)"(
      account?: null,
      newProposalTimelock?: null
    ): ProposalTimelockChangedEventFilter;
    ProposalTimelockChanged(
      account?: null,
      newProposalTimelock?: null
    ): ProposalTimelockChangedEventFilter;

    "QuorumNotReached(address,uint256,address,uint256)"(
      account?: null,
      proposalId?: null,
      newOwnerProposed?: null,
      approvalCount?: null
    ): QuorumNotReachedEventFilter;
    QuorumNotReached(
      account?: null,
      proposalId?: null,
      newOwnerProposed?: null,
      approvalCount?: null
    ): QuorumNotReachedEventFilter;
  };

  estimateGas: {
    AUTHOR(overrides?: CallOverrides): Promise<BigNumber>;

    NAME(overrides?: CallOverrides): Promise<BigNumber>;

    VERSION(overrides?: CallOverrides): Promise<BigNumber>;

    addGuardian(
      _newGuardian: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    changeProposalTimelock(
      _newTimelock: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    discardCurrentProposal(
      _account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    getAccountCurrentProposalId(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAccountGuardianCount(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAccountProposalTimelock(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getOwnersForAccount(
      _account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    getProposal(
      _account: PromiseOrValue<string>,
      _proposalId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    guardianCosign(
      _account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    guardianPropose(
      _account: PromiseOrValue<string>,
      _newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    isGuardian(
      _guardian: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isGuardianOfAccount(
      _account: PromiseOrValue<string>,
      _guardian: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    multiOwnerPlugin(overrides?: CallOverrides): Promise<BigNumber>;

    onHookApply(
      pluginAppliedOn: PromiseOrValue<string>,
      injectedHooksInfo: IPluginManager.InjectedHooksInfoStruct,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    onHookUnapply(
      pluginAppliedOn: PromiseOrValue<string>,
      injectedHooksInfo: IPluginManager.InjectedHooksInfoStruct,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    onInstall(
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    onUninstall(
      arg0: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    pluginManifest(overrides?: CallOverrides): Promise<BigNumber>;

    postExecutionHook(
      functionId: PromiseOrValue<BigNumberish>,
      preExecHookData: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    preExecutionHook(
      functionId: PromiseOrValue<BigNumberish>,
      sender: PromiseOrValue<string>,
      value: PromiseOrValue<BigNumberish>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    preRuntimeValidationHook(
      functionId: PromiseOrValue<BigNumberish>,
      sender: PromiseOrValue<string>,
      value: PromiseOrValue<BigNumberish>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    preUserOpValidationHook(
      functionId: PromiseOrValue<BigNumberish>,
      userOp: UserOperationStruct,
      userOpHash: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    removeGuardian(
      _guardian: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    runtimeValidationFunction(
      functionId: PromiseOrValue<BigNumberish>,
      sender: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>,
      arg3: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    supportsInterface(
      interfaceId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    userOpValidationFunction(
      functionId: PromiseOrValue<BigNumberish>,
      userOp: UserOperationStruct,
      userOpHash: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    AUTHOR(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    NAME(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    VERSION(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    addGuardian(
      _newGuardian: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    changeProposalTimelock(
      _newTimelock: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    discardCurrentProposal(
      _account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    getAccountCurrentProposalId(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAccountGuardianCount(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAccountProposalTimelock(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getOwnersForAccount(
      _account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    getProposal(
      _account: PromiseOrValue<string>,
      _proposalId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    guardianCosign(
      _account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    guardianPropose(
      _account: PromiseOrValue<string>,
      _newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    isGuardian(
      _guardian: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isGuardianOfAccount(
      _account: PromiseOrValue<string>,
      _guardian: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    multiOwnerPlugin(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    onHookApply(
      pluginAppliedOn: PromiseOrValue<string>,
      injectedHooksInfo: IPluginManager.InjectedHooksInfoStruct,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    onHookUnapply(
      pluginAppliedOn: PromiseOrValue<string>,
      injectedHooksInfo: IPluginManager.InjectedHooksInfoStruct,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    onInstall(
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    onUninstall(
      arg0: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    pluginManifest(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    postExecutionHook(
      functionId: PromiseOrValue<BigNumberish>,
      preExecHookData: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    preExecutionHook(
      functionId: PromiseOrValue<BigNumberish>,
      sender: PromiseOrValue<string>,
      value: PromiseOrValue<BigNumberish>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    preRuntimeValidationHook(
      functionId: PromiseOrValue<BigNumberish>,
      sender: PromiseOrValue<string>,
      value: PromiseOrValue<BigNumberish>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    preUserOpValidationHook(
      functionId: PromiseOrValue<BigNumberish>,
      userOp: UserOperationStruct,
      userOpHash: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    removeGuardian(
      _guardian: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    runtimeValidationFunction(
      functionId: PromiseOrValue<BigNumberish>,
      sender: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>,
      arg3: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    supportsInterface(
      interfaceId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    userOpValidationFunction(
      functionId: PromiseOrValue<BigNumberish>,
      userOp: UserOperationStruct,
      userOpHash: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
