/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../common";

export declare namespace IExecution {
  export type ExecutionStruct = {
    target: PromiseOrValue<string>;
    value: PromiseOrValue<BigNumberish>;
    callData: PromiseOrValue<BytesLike>;
  };

  export type ExecutionStructOutput = [string, BigNumber, string] & {
    target: string;
    value: BigNumber;
    callData: string;
  };
}

export declare namespace IERC4337 {
  export type UserOperationStruct = {
    sender: PromiseOrValue<string>;
    nonce: PromiseOrValue<BigNumberish>;
    initCode: PromiseOrValue<BytesLike>;
    callData: PromiseOrValue<BytesLike>;
    callGasLimit: PromiseOrValue<BigNumberish>;
    verificationGasLimit: PromiseOrValue<BigNumberish>;
    preVerificationGas: PromiseOrValue<BigNumberish>;
    maxFeePerGas: PromiseOrValue<BigNumberish>;
    maxPriorityFeePerGas: PromiseOrValue<BigNumberish>;
    paymasterAndData: PromiseOrValue<BytesLike>;
    signature: PromiseOrValue<BytesLike>;
  };

  export type UserOperationStructOutput = [
    string,
    BigNumber,
    string,
    string,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    string,
    string
  ] & {
    sender: string;
    nonce: BigNumber;
    initCode: string;
    callData: string;
    callGasLimit: BigNumber;
    verificationGasLimit: BigNumber;
    preVerificationGas: BigNumber;
    maxFeePerGas: BigNumber;
    maxPriorityFeePerGas: BigNumber;
    paymasterAndData: string;
    signature: string;
  };
}

export interface EtherspotWallet7579Interface extends utils.Interface {
  functions: {
    "AUTHOR()": FunctionFragment;
    "NAME()": FunctionFragment;
    "VERSION()": FunctionFragment;
    "addGuardian(address)": FunctionFragment;
    "addOwner(address)": FunctionFragment;
    "changeProposalTimelock(uint256)": FunctionFragment;
    "discardCurrentProposal()": FunctionFragment;
    "entryPoint()": FunctionFragment;
    "execute(address,uint256,bytes)": FunctionFragment;
    "executeBatch((address,uint256,bytes)[])": FunctionFragment;
    "executeBatchFromExecutor((address,uint256,bytes)[])": FunctionFragment;
    "executeDelegateCall(address,bytes)": FunctionFragment;
    "executeDelegateCallFromExecutor(address,bytes)": FunctionFragment;
    "executeFromExecutor(address,uint256,bytes)": FunctionFragment;
    "getExecutorsPaginated(address,uint256)": FunctionFragment;
    "getProposal(uint256)": FunctionFragment;
    "getValidatorPaginated(address,uint256)": FunctionFragment;
    "guardianCosign()": FunctionFragment;
    "guardianCount()": FunctionFragment;
    "guardianPropose(address)": FunctionFragment;
    "initializeAccount(bytes)": FunctionFragment;
    "installExecutor(address,bytes)": FunctionFragment;
    "installFallback(address,bytes)": FunctionFragment;
    "installValidator(address,bytes)": FunctionFragment;
    "isExecutorInstalled(address)": FunctionFragment;
    "isFallbackInstalled(address)": FunctionFragment;
    "isGuardian(address)": FunctionFragment;
    "isOwner(address)": FunctionFragment;
    "isValidSignature(bytes32,bytes)": FunctionFragment;
    "isValidatorInstalled(address)": FunctionFragment;
    "ownerCount()": FunctionFragment;
    "proposalId()": FunctionFragment;
    "proposalTimelock()": FunctionFragment;
    "removeGuardian(address)": FunctionFragment;
    "removeOwner(address)": FunctionFragment;
    "supportsInterface(bytes4)": FunctionFragment;
    "uninstallExecutor(address,bytes)": FunctionFragment;
    "uninstallFallback(address,bytes)": FunctionFragment;
    "uninstallValidator(address,bytes)": FunctionFragment;
    "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "AUTHOR"
      | "NAME"
      | "VERSION"
      | "addGuardian"
      | "addOwner"
      | "changeProposalTimelock"
      | "discardCurrentProposal"
      | "entryPoint"
      | "execute"
      | "executeBatch"
      | "executeBatchFromExecutor"
      | "executeDelegateCall"
      | "executeDelegateCallFromExecutor"
      | "executeFromExecutor"
      | "getExecutorsPaginated"
      | "getProposal"
      | "getValidatorPaginated"
      | "guardianCosign"
      | "guardianCount"
      | "guardianPropose"
      | "initializeAccount"
      | "installExecutor"
      | "installFallback"
      | "installValidator"
      | "isExecutorInstalled"
      | "isFallbackInstalled"
      | "isGuardian"
      | "isOwner"
      | "isValidSignature"
      | "isValidatorInstalled"
      | "ownerCount"
      | "proposalId"
      | "proposalTimelock"
      | "removeGuardian"
      | "removeOwner"
      | "supportsInterface"
      | "uninstallExecutor"
      | "uninstallFallback"
      | "uninstallValidator"
      | "validateUserOp"
  ): FunctionFragment;

  encodeFunctionData(functionFragment: "AUTHOR", values?: undefined): string;
  encodeFunctionData(functionFragment: "NAME", values?: undefined): string;
  encodeFunctionData(functionFragment: "VERSION", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "addGuardian",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "addOwner",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "changeProposalTimelock",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "discardCurrentProposal",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "entryPoint",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "execute",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "executeBatch",
    values: [IExecution.ExecutionStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "executeBatchFromExecutor",
    values: [IExecution.ExecutionStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "executeDelegateCall",
    values: [PromiseOrValue<string>, PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "executeDelegateCallFromExecutor",
    values: [PromiseOrValue<string>, PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "executeFromExecutor",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getExecutorsPaginated",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getProposal",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getValidatorPaginated",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "guardianCosign",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "guardianCount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "guardianPropose",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "initializeAccount",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "installExecutor",
    values: [PromiseOrValue<string>, PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "installFallback",
    values: [PromiseOrValue<string>, PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "installValidator",
    values: [PromiseOrValue<string>, PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "isExecutorInstalled",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "isFallbackInstalled",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "isGuardian",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "isOwner",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "isValidSignature",
    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "isValidatorInstalled",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "ownerCount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "proposalId",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "proposalTimelock",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "removeGuardian",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "removeOwner",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "supportsInterface",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "uninstallExecutor",
    values: [PromiseOrValue<string>, PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "uninstallFallback",
    values: [PromiseOrValue<string>, PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "uninstallValidator",
    values: [PromiseOrValue<string>, PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "validateUserOp",
    values: [
      IERC4337.UserOperationStruct,
      PromiseOrValue<BytesLike>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;

  decodeFunctionResult(functionFragment: "AUTHOR", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "NAME", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "VERSION", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "addGuardian",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "addOwner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "changeProposalTimelock",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "discardCurrentProposal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "entryPoint", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "execute", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "executeBatch",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "executeBatchFromExecutor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "executeDelegateCall",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "executeDelegateCallFromExecutor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "executeFromExecutor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getExecutorsPaginated",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getProposal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getValidatorPaginated",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "guardianCosign",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "guardianCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "guardianPropose",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "initializeAccount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "installExecutor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "installFallback",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "installValidator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isExecutorInstalled",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isFallbackInstalled",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "isGuardian", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "isOwner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isValidSignature",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isValidatorInstalled",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "ownerCount", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "proposalId", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "proposalTimelock",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeGuardian",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeOwner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "uninstallExecutor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "uninstallFallback",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "uninstallValidator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "validateUserOp",
    data: BytesLike
  ): Result;

  events: {
    "DisableExecutor(address)": EventFragment;
    "DisableValidator(address)": EventFragment;
    "EnableExecutor(address)": EventFragment;
    "EnableValidator(address)": EventFragment;
    "FallbackHandlerChanged(address)": EventFragment;
    "GuardianAdded(address,address)": EventFragment;
    "GuardianRemoved(address,address)": EventFragment;
    "OwnerAdded(address,address)": EventFragment;
    "OwnerRemoved(address,address)": EventFragment;
    "ProposalDiscarded(address,uint256,address)": EventFragment;
    "ProposalSubmitted(address,uint256,address,address)": EventFragment;
    "ProposalTimelockChanged(address,uint256)": EventFragment;
    "QuorumNotReached(address,uint256,address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "DisableExecutor"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DisableValidator"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "EnableExecutor"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "EnableValidator"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "FallbackHandlerChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "GuardianAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "GuardianRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnerAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnerRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ProposalDiscarded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ProposalSubmitted"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ProposalTimelockChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "QuorumNotReached"): EventFragment;
}

export interface DisableExecutorEventObject {
  module: string;
}
export type DisableExecutorEvent = TypedEvent<
  [string],
  DisableExecutorEventObject
>;

export type DisableExecutorEventFilter = TypedEventFilter<DisableExecutorEvent>;

export interface DisableValidatorEventObject {
  module: string;
}
export type DisableValidatorEvent = TypedEvent<
  [string],
  DisableValidatorEventObject
>;

export type DisableValidatorEventFilter =
  TypedEventFilter<DisableValidatorEvent>;

export interface EnableExecutorEventObject {
  module: string;
}
export type EnableExecutorEvent = TypedEvent<
  [string],
  EnableExecutorEventObject
>;

export type EnableExecutorEventFilter = TypedEventFilter<EnableExecutorEvent>;

export interface EnableValidatorEventObject {
  module: string;
}
export type EnableValidatorEvent = TypedEvent<
  [string],
  EnableValidatorEventObject
>;

export type EnableValidatorEventFilter = TypedEventFilter<EnableValidatorEvent>;

export interface FallbackHandlerChangedEventObject {
  handler: string;
}
export type FallbackHandlerChangedEvent = TypedEvent<
  [string],
  FallbackHandlerChangedEventObject
>;

export type FallbackHandlerChangedEventFilter =
  TypedEventFilter<FallbackHandlerChangedEvent>;

export interface GuardianAddedEventObject {
  account: string;
  newGuardian: string;
}
export type GuardianAddedEvent = TypedEvent<
  [string, string],
  GuardianAddedEventObject
>;

export type GuardianAddedEventFilter = TypedEventFilter<GuardianAddedEvent>;

export interface GuardianRemovedEventObject {
  account: string;
  removedGuardian: string;
}
export type GuardianRemovedEvent = TypedEvent<
  [string, string],
  GuardianRemovedEventObject
>;

export type GuardianRemovedEventFilter = TypedEventFilter<GuardianRemovedEvent>;

export interface OwnerAddedEventObject {
  account: string;
  newOwner: string;
}
export type OwnerAddedEvent = TypedEvent<
  [string, string],
  OwnerAddedEventObject
>;

export type OwnerAddedEventFilter = TypedEventFilter<OwnerAddedEvent>;

export interface OwnerRemovedEventObject {
  account: string;
  removedOwner: string;
}
export type OwnerRemovedEvent = TypedEvent<
  [string, string],
  OwnerRemovedEventObject
>;

export type OwnerRemovedEventFilter = TypedEventFilter<OwnerRemovedEvent>;

export interface ProposalDiscardedEventObject {
  account: string;
  proposalId: BigNumber;
  discardedBy: string;
}
export type ProposalDiscardedEvent = TypedEvent<
  [string, BigNumber, string],
  ProposalDiscardedEventObject
>;

export type ProposalDiscardedEventFilter =
  TypedEventFilter<ProposalDiscardedEvent>;

export interface ProposalSubmittedEventObject {
  account: string;
  proposalId: BigNumber;
  newOwnerProposed: string;
  proposer: string;
}
export type ProposalSubmittedEvent = TypedEvent<
  [string, BigNumber, string, string],
  ProposalSubmittedEventObject
>;

export type ProposalSubmittedEventFilter =
  TypedEventFilter<ProposalSubmittedEvent>;

export interface ProposalTimelockChangedEventObject {
  account: string;
  newTimelock: BigNumber;
}
export type ProposalTimelockChangedEvent = TypedEvent<
  [string, BigNumber],
  ProposalTimelockChangedEventObject
>;

export type ProposalTimelockChangedEventFilter =
  TypedEventFilter<ProposalTimelockChangedEvent>;

export interface QuorumNotReachedEventObject {
  account: string;
  proposalId: BigNumber;
  newOwnerProposed: string;
  approvalCount: BigNumber;
}
export type QuorumNotReachedEvent = TypedEvent<
  [string, BigNumber, string, BigNumber],
  QuorumNotReachedEventObject
>;

export type QuorumNotReachedEventFilter =
  TypedEventFilter<QuorumNotReachedEvent>;

export interface EtherspotWallet7579 extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: EtherspotWallet7579Interface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    AUTHOR(overrides?: CallOverrides): Promise<[string]>;

    NAME(overrides?: CallOverrides): Promise<[string]>;

    VERSION(overrides?: CallOverrides): Promise<[string]>;

    addGuardian(
      _newGuardian: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    addOwner(
      _newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    changeProposalTimelock(
      _newTimelock: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    discardCurrentProposal(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    entryPoint(overrides?: CallOverrides): Promise<[string]>;

    execute(
      target: PromiseOrValue<string>,
      value: PromiseOrValue<BigNumberish>,
      callData: PromiseOrValue<BytesLike>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    executeBatch(
      executions: IExecution.ExecutionStruct[],
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    executeBatchFromExecutor(
      executions: IExecution.ExecutionStruct[],
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    executeDelegateCall(
      target: PromiseOrValue<string>,
      callData: PromiseOrValue<BytesLike>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    executeDelegateCallFromExecutor(
      target: PromiseOrValue<string>,
      callData: PromiseOrValue<BytesLike>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    executeFromExecutor(
      target: PromiseOrValue<string>,
      value: PromiseOrValue<BigNumberish>,
      callData: PromiseOrValue<BytesLike>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    getExecutorsPaginated(
      cursor: PromiseOrValue<string>,
      size: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string[], string] & { array: string[]; next: string }>;

    getProposal(
      _proposalId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, string[], boolean, BigNumber] & {
        ownerProposed_: string;
        approvalCount_: BigNumber;
        guardiansApproved_: string[];
        resolved_: boolean;
        proposedAt_: BigNumber;
      }
    >;

    getValidatorPaginated(
      cursor: PromiseOrValue<string>,
      size: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string[], string] & { array: string[]; next: string }>;

    guardianCosign(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    guardianCount(overrides?: CallOverrides): Promise<[BigNumber]>;

    guardianPropose(
      _newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    initializeAccount(
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    installExecutor(
      executor: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    installFallback(
      fallbackHandler: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    installValidator(
      validator: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    isExecutorInstalled(
      executor: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isFallbackInstalled(
      fallbackHandler: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean] & { enabled: boolean }>;

    isGuardian(
      _address: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isOwner(
      _address: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isValidSignature(
      hash: PromiseOrValue<BytesLike>,
      data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    isValidatorInstalled(
      validator: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    ownerCount(overrides?: CallOverrides): Promise<[BigNumber]>;

    proposalId(overrides?: CallOverrides): Promise<[BigNumber]>;

    proposalTimelock(overrides?: CallOverrides): Promise<[BigNumber]>;

    removeGuardian(
      _guardian: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    removeOwner(
      _owner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    supportsInterface(
      interfaceID: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    uninstallExecutor(
      executor: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    uninstallFallback(
      arg0: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    uninstallValidator(
      validator: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    validateUserOp(
      userOp: IERC4337.UserOperationStruct,
      userOpHash: PromiseOrValue<BytesLike>,
      missingAccountFunds: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  AUTHOR(overrides?: CallOverrides): Promise<string>;

  NAME(overrides?: CallOverrides): Promise<string>;

  VERSION(overrides?: CallOverrides): Promise<string>;

  addGuardian(
    _newGuardian: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  addOwner(
    _newOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  changeProposalTimelock(
    _newTimelock: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  discardCurrentProposal(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  entryPoint(overrides?: CallOverrides): Promise<string>;

  execute(
    target: PromiseOrValue<string>,
    value: PromiseOrValue<BigNumberish>,
    callData: PromiseOrValue<BytesLike>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  executeBatch(
    executions: IExecution.ExecutionStruct[],
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  executeBatchFromExecutor(
    executions: IExecution.ExecutionStruct[],
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  executeDelegateCall(
    target: PromiseOrValue<string>,
    callData: PromiseOrValue<BytesLike>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  executeDelegateCallFromExecutor(
    target: PromiseOrValue<string>,
    callData: PromiseOrValue<BytesLike>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  executeFromExecutor(
    target: PromiseOrValue<string>,
    value: PromiseOrValue<BigNumberish>,
    callData: PromiseOrValue<BytesLike>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  getExecutorsPaginated(
    cursor: PromiseOrValue<string>,
    size: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<[string[], string] & { array: string[]; next: string }>;

  getProposal(
    _proposalId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<
    [string, BigNumber, string[], boolean, BigNumber] & {
      ownerProposed_: string;
      approvalCount_: BigNumber;
      guardiansApproved_: string[];
      resolved_: boolean;
      proposedAt_: BigNumber;
    }
  >;

  getValidatorPaginated(
    cursor: PromiseOrValue<string>,
    size: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<[string[], string] & { array: string[]; next: string }>;

  guardianCosign(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  guardianCount(overrides?: CallOverrides): Promise<BigNumber>;

  guardianPropose(
    _newOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  initializeAccount(
    data: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  installExecutor(
    executor: PromiseOrValue<string>,
    data: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  installFallback(
    fallbackHandler: PromiseOrValue<string>,
    data: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  installValidator(
    validator: PromiseOrValue<string>,
    data: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  isExecutorInstalled(
    executor: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isFallbackInstalled(
    fallbackHandler: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isGuardian(
    _address: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isOwner(
    _address: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isValidSignature(
    hash: PromiseOrValue<BytesLike>,
    data: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<string>;

  isValidatorInstalled(
    validator: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  ownerCount(overrides?: CallOverrides): Promise<BigNumber>;

  proposalId(overrides?: CallOverrides): Promise<BigNumber>;

  proposalTimelock(overrides?: CallOverrides): Promise<BigNumber>;

  removeGuardian(
    _guardian: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  removeOwner(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  supportsInterface(
    interfaceID: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  uninstallExecutor(
    executor: PromiseOrValue<string>,
    data: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  uninstallFallback(
    arg0: PromiseOrValue<string>,
    data: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  uninstallValidator(
    validator: PromiseOrValue<string>,
    data: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  validateUserOp(
    userOp: IERC4337.UserOperationStruct,
    userOpHash: PromiseOrValue<BytesLike>,
    missingAccountFunds: PromiseOrValue<BigNumberish>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    AUTHOR(overrides?: CallOverrides): Promise<string>;

    NAME(overrides?: CallOverrides): Promise<string>;

    VERSION(overrides?: CallOverrides): Promise<string>;

    addGuardian(
      _newGuardian: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    addOwner(
      _newOwner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    changeProposalTimelock(
      _newTimelock: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    discardCurrentProposal(overrides?: CallOverrides): Promise<void>;

    entryPoint(overrides?: CallOverrides): Promise<string>;

    execute(
      target: PromiseOrValue<string>,
      value: PromiseOrValue<BigNumberish>,
      callData: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string>;

    executeBatch(
      executions: IExecution.ExecutionStruct[],
      overrides?: CallOverrides
    ): Promise<string[]>;

    executeBatchFromExecutor(
      executions: IExecution.ExecutionStruct[],
      overrides?: CallOverrides
    ): Promise<string[]>;

    executeDelegateCall(
      target: PromiseOrValue<string>,
      callData: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string>;

    executeDelegateCallFromExecutor(
      target: PromiseOrValue<string>,
      callData: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string>;

    executeFromExecutor(
      target: PromiseOrValue<string>,
      value: PromiseOrValue<BigNumberish>,
      callData: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string>;

    getExecutorsPaginated(
      cursor: PromiseOrValue<string>,
      size: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string[], string] & { array: string[]; next: string }>;

    getProposal(
      _proposalId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, string[], boolean, BigNumber] & {
        ownerProposed_: string;
        approvalCount_: BigNumber;
        guardiansApproved_: string[];
        resolved_: boolean;
        proposedAt_: BigNumber;
      }
    >;

    getValidatorPaginated(
      cursor: PromiseOrValue<string>,
      size: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string[], string] & { array: string[]; next: string }>;

    guardianCosign(overrides?: CallOverrides): Promise<void>;

    guardianCount(overrides?: CallOverrides): Promise<BigNumber>;

    guardianPropose(
      _newOwner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    initializeAccount(
      data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    installExecutor(
      executor: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    installFallback(
      fallbackHandler: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    installValidator(
      validator: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    isExecutorInstalled(
      executor: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isFallbackInstalled(
      fallbackHandler: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isGuardian(
      _address: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isOwner(
      _address: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isValidSignature(
      hash: PromiseOrValue<BytesLike>,
      data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string>;

    isValidatorInstalled(
      validator: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    ownerCount(overrides?: CallOverrides): Promise<BigNumber>;

    proposalId(overrides?: CallOverrides): Promise<BigNumber>;

    proposalTimelock(overrides?: CallOverrides): Promise<BigNumber>;

    removeGuardian(
      _guardian: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    removeOwner(
      _owner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    supportsInterface(
      interfaceID: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    uninstallExecutor(
      executor: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    uninstallFallback(
      arg0: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    uninstallValidator(
      validator: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    validateUserOp(
      userOp: IERC4337.UserOperationStruct,
      userOpHash: PromiseOrValue<BytesLike>,
      missingAccountFunds: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  filters: {
    "DisableExecutor(address)"(module?: null): DisableExecutorEventFilter;
    DisableExecutor(module?: null): DisableExecutorEventFilter;

    "DisableValidator(address)"(module?: null): DisableValidatorEventFilter;
    DisableValidator(module?: null): DisableValidatorEventFilter;

    "EnableExecutor(address)"(module?: null): EnableExecutorEventFilter;
    EnableExecutor(module?: null): EnableExecutorEventFilter;

    "EnableValidator(address)"(module?: null): EnableValidatorEventFilter;
    EnableValidator(module?: null): EnableValidatorEventFilter;

    "FallbackHandlerChanged(address)"(
      handler?: null
    ): FallbackHandlerChangedEventFilter;
    FallbackHandlerChanged(handler?: null): FallbackHandlerChangedEventFilter;

    "GuardianAdded(address,address)"(
      account?: null,
      newGuardian?: null
    ): GuardianAddedEventFilter;
    GuardianAdded(account?: null, newGuardian?: null): GuardianAddedEventFilter;

    "GuardianRemoved(address,address)"(
      account?: null,
      removedGuardian?: null
    ): GuardianRemovedEventFilter;
    GuardianRemoved(
      account?: null,
      removedGuardian?: null
    ): GuardianRemovedEventFilter;

    "OwnerAdded(address,address)"(
      account?: null,
      newOwner?: null
    ): OwnerAddedEventFilter;
    OwnerAdded(account?: null, newOwner?: null): OwnerAddedEventFilter;

    "OwnerRemoved(address,address)"(
      account?: null,
      removedOwner?: null
    ): OwnerRemovedEventFilter;
    OwnerRemoved(account?: null, removedOwner?: null): OwnerRemovedEventFilter;

    "ProposalDiscarded(address,uint256,address)"(
      account?: null,
      proposalId?: null,
      discardedBy?: null
    ): ProposalDiscardedEventFilter;
    ProposalDiscarded(
      account?: null,
      proposalId?: null,
      discardedBy?: null
    ): ProposalDiscardedEventFilter;

    "ProposalSubmitted(address,uint256,address,address)"(
      account?: null,
      proposalId?: null,
      newOwnerProposed?: null,
      proposer?: null
    ): ProposalSubmittedEventFilter;
    ProposalSubmitted(
      account?: null,
      proposalId?: null,
      newOwnerProposed?: null,
      proposer?: null
    ): ProposalSubmittedEventFilter;

    "ProposalTimelockChanged(address,uint256)"(
      account?: null,
      newTimelock?: null
    ): ProposalTimelockChangedEventFilter;
    ProposalTimelockChanged(
      account?: null,
      newTimelock?: null
    ): ProposalTimelockChangedEventFilter;

    "QuorumNotReached(address,uint256,address,uint256)"(
      account?: null,
      proposalId?: null,
      newOwnerProposed?: null,
      approvalCount?: null
    ): QuorumNotReachedEventFilter;
    QuorumNotReached(
      account?: null,
      proposalId?: null,
      newOwnerProposed?: null,
      approvalCount?: null
    ): QuorumNotReachedEventFilter;
  };

  estimateGas: {
    AUTHOR(overrides?: CallOverrides): Promise<BigNumber>;

    NAME(overrides?: CallOverrides): Promise<BigNumber>;

    VERSION(overrides?: CallOverrides): Promise<BigNumber>;

    addGuardian(
      _newGuardian: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    addOwner(
      _newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    changeProposalTimelock(
      _newTimelock: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    discardCurrentProposal(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    entryPoint(overrides?: CallOverrides): Promise<BigNumber>;

    execute(
      target: PromiseOrValue<string>,
      value: PromiseOrValue<BigNumberish>,
      callData: PromiseOrValue<BytesLike>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    executeBatch(
      executions: IExecution.ExecutionStruct[],
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    executeBatchFromExecutor(
      executions: IExecution.ExecutionStruct[],
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    executeDelegateCall(
      target: PromiseOrValue<string>,
      callData: PromiseOrValue<BytesLike>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    executeDelegateCallFromExecutor(
      target: PromiseOrValue<string>,
      callData: PromiseOrValue<BytesLike>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    executeFromExecutor(
      target: PromiseOrValue<string>,
      value: PromiseOrValue<BigNumberish>,
      callData: PromiseOrValue<BytesLike>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    getExecutorsPaginated(
      cursor: PromiseOrValue<string>,
      size: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getProposal(
      _proposalId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getValidatorPaginated(
      cursor: PromiseOrValue<string>,
      size: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    guardianCosign(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    guardianCount(overrides?: CallOverrides): Promise<BigNumber>;

    guardianPropose(
      _newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    initializeAccount(
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    installExecutor(
      executor: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    installFallback(
      fallbackHandler: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    installValidator(
      validator: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    isExecutorInstalled(
      executor: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isFallbackInstalled(
      fallbackHandler: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isGuardian(
      _address: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isOwner(
      _address: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isValidSignature(
      hash: PromiseOrValue<BytesLike>,
      data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isValidatorInstalled(
      validator: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    ownerCount(overrides?: CallOverrides): Promise<BigNumber>;

    proposalId(overrides?: CallOverrides): Promise<BigNumber>;

    proposalTimelock(overrides?: CallOverrides): Promise<BigNumber>;

    removeGuardian(
      _guardian: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    removeOwner(
      _owner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    supportsInterface(
      interfaceID: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    uninstallExecutor(
      executor: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    uninstallFallback(
      arg0: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    uninstallValidator(
      validator: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    validateUserOp(
      userOp: IERC4337.UserOperationStruct,
      userOpHash: PromiseOrValue<BytesLike>,
      missingAccountFunds: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    AUTHOR(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    NAME(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    VERSION(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    addGuardian(
      _newGuardian: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    addOwner(
      _newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    changeProposalTimelock(
      _newTimelock: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    discardCurrentProposal(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    entryPoint(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    execute(
      target: PromiseOrValue<string>,
      value: PromiseOrValue<BigNumberish>,
      callData: PromiseOrValue<BytesLike>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    executeBatch(
      executions: IExecution.ExecutionStruct[],
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    executeBatchFromExecutor(
      executions: IExecution.ExecutionStruct[],
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    executeDelegateCall(
      target: PromiseOrValue<string>,
      callData: PromiseOrValue<BytesLike>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    executeDelegateCallFromExecutor(
      target: PromiseOrValue<string>,
      callData: PromiseOrValue<BytesLike>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    executeFromExecutor(
      target: PromiseOrValue<string>,
      value: PromiseOrValue<BigNumberish>,
      callData: PromiseOrValue<BytesLike>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    getExecutorsPaginated(
      cursor: PromiseOrValue<string>,
      size: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getProposal(
      _proposalId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getValidatorPaginated(
      cursor: PromiseOrValue<string>,
      size: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    guardianCosign(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    guardianCount(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    guardianPropose(
      _newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    initializeAccount(
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    installExecutor(
      executor: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    installFallback(
      fallbackHandler: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    installValidator(
      validator: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    isExecutorInstalled(
      executor: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isFallbackInstalled(
      fallbackHandler: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isGuardian(
      _address: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isOwner(
      _address: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isValidSignature(
      hash: PromiseOrValue<BytesLike>,
      data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isValidatorInstalled(
      validator: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ownerCount(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    proposalId(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    proposalTimelock(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    removeGuardian(
      _guardian: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    removeOwner(
      _owner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    supportsInterface(
      interfaceID: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    uninstallExecutor(
      executor: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    uninstallFallback(
      arg0: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    uninstallValidator(
      validator: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    validateUserOp(
      userOp: IERC4337.UserOperationStruct,
      userOpHash: PromiseOrValue<BytesLike>,
      missingAccountFunds: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
